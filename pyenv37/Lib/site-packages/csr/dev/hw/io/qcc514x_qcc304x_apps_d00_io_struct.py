# -*- coding: utf-8 -*-
#------------------------------------------------------------------------------
# Automatically-generated memory-mapped registers IO file
#------------------------------------------------------------------------------

class c_enum(object):
   def __init__(self, parent, value, text, reg):
      self.parent = parent
      self.value  = value
      self.text   = text
      self.reg    = reg

class c_value(object):
   def __init__(self, parent, name, value, text):
      self.parent = parent
      self.name   = name
      self.value  = value
      self.text   = text

class c_bits(object):
   def __init__(self, parent, lsb, msb, mask, width, rw_flags, text):
      self.parent   = parent
      self.lsb      = lsb
      self.msb      = msb
      self.mask     = mask
      self.rw_flags = rw_flags
      self.width    = width
      self.text     = text

class c_reg(object):
   def __init__(self, addr, r, w, m, rw_flags, width, reset, local, ext_read, mod_name, group, text, locked_by, unlock_value, typedefd_io, safe_to_load, is_bank_ctrl, bank_ctrl_reg, constant):
      self.addr          = addr
      self.r             = r            # Readable
      self.w             = w            # Writeable
      self.m             = m            # Mixed register type
      self.rw_flags      = rw_flags     # RW flags
      self.width         = width
      self.local         = local
      self.ext_read      = ext_read
      self.mod_name      = mod_name
      self.text          = text
      self.group         = group
      self.reset         = reset
      self.locked_by     = locked_by
      self.unlock_value  = unlock_value
      self.safe_to_load  = safe_to_load
      self.typedefd_io   = typedefd_io
      self.is_bank_ctrl  = is_bank_ctrl
      self.bank_ctrl_reg = bank_ctrl_reg
      self.constant      = constant

class c_regarray(object):
   def __init__(self, addr, num_elements, element):
      self.addr = addr
      self.num_elements  = num_elements
      self.element = element





APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL                                            = c_reg(0xffff99bc, 1, 1, 0, "", 4, 15, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P0_ACCESS_PERMISSION = c_bits(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, 0, 0, 0x1, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P0_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P0__P0_ACCESS_BLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, "", 0, "")
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P0_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P0__P0_ACCESS_UNBLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, "", 1, "")
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P1_ACCESS_PERMISSION = c_bits(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, 1, 1, 0x2, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P1_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P0__P1_ACCESS_BLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, "", 0, "")
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P1_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P0__P1_ACCESS_UNBLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, "", 1, "")
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P2_ACCESS_PERMISSION = c_bits(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, 2, 2, 0x4, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P2_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P0__P2_ACCESS_BLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, "", 0, "")
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P2_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P0__P2_ACCESS_UNBLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, "", 1, "")
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P3_ACCESS_PERMISSION = c_bits(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, 3, 3, 0x8, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P3_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P0__P3_ACCESS_BLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, "", 0, "")
APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P0__P3_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P0__P3_ACCESS_UNBLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P0_ACCESS_CTRL, "", 1, "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES                                                = c_reg(0xffff99b4, 1, 1, 0, "", 20, 131099, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_REGISTERS = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 0, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_CPU0 = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_CPU1 = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 2, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_TBUS_REMOTE = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 3, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_DMAC = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 4, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VM_CPU1_REMOTE_REQ = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 5, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CPU1_ACCESS_FAULT = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 6, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE0_RAM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 9, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE0_RAM1_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 10, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE0_TAG_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 11, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE1_RAM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 12, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE1_RAM1_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 13, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE1_TAG_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 14, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_SQIF0_TBUS_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 15, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_SQIF1_TBUS_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 16, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CPU0_VM_BUFFER_MAP = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 17, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CPU1_VM_BUFFER_MAP = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 18, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_REMOTE_REGISTERS = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 19, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_MAX = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 20, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_WIDTH_SPOILER = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 2147483647, "", "")
APPS_BANKED_EXCEPTIONS_P0_ENABLES.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_SDIO_HOST_DM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_ENABLES, 8, "", "")
APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK                                             = c_reg(0xffff99b8, 1, 1, 0, "", 4, 15, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P0__MUTEX_AVAILABLE  = c_enum(APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK, 0, "", "")
APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P0__MUTEX_CLAIMED_BY_P0 = c_enum(APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P0__MUTEX_CLAIMED_BY_P1 = c_enum(APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK, 2, "", "")
APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P0__MUTEX_CLAIMED_BY_P2 = c_enum(APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK, 4, "", "")
APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P0__MUTEX_CLAIMED_BY_P3 = c_enum(APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK, 8, "", "")
APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P0__MUTEX_DISABLED   = c_enum(APPS_BANKED_EXCEPTIONS_P0_MUTEX_LOCK, 15, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS                                                 = c_reg(0xffff99b0, 1, 1, 0, "", 20, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_REGISTERS = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 0, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_CPU0 = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_CPU1 = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 2, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_TBUS_REMOTE = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 3, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_DMAC = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 4, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VM_CPU1_REMOTE_REQ = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 5, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CPU1_ACCESS_FAULT = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 6, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE0_RAM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 9, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE0_RAM1_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 10, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE0_TAG_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 11, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE1_RAM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 12, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE1_RAM1_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 13, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE1_TAG_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 14, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_SQIF0_TBUS_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 15, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_SQIF1_TBUS_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 16, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CPU0_VM_BUFFER_MAP = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 17, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CPU1_VM_BUFFER_MAP = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 18, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_REMOTE_REGISTERS = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 19, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_MAX = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 20, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_WIDTH_SPOILER = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 2147483647, "", "")
APPS_BANKED_EXCEPTIONS_P0_STATUS.APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_SDIO_HOST_DM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P0_STATUS, 8, "", "")
APPS_BANKED_EXCEPTIONS_P0__P0_ACCESS_PERMISSION                                  = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P0__P0_ACCESS_BLOCKED                                     = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P0__P0_ACCESS_UNBLOCKED                                   = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0__P1_ACCESS_PERMISSION                                  = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0__P1_ACCESS_BLOCKED                                     = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P0__P1_ACCESS_UNBLOCKED                                   = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0__P2_ACCESS_PERMISSION                                  = c_enum(None, 2, "", "")
APPS_BANKED_EXCEPTIONS_P0__P2_ACCESS_BLOCKED                                     = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P0__P2_ACCESS_UNBLOCKED                                   = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0__P3_ACCESS_PERMISSION                                  = c_enum(None, 3, "", "")
APPS_BANKED_EXCEPTIONS_P0__P3_ACCESS_BLOCKED                                     = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P0__P3_ACCESS_UNBLOCKED                                   = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_REGISTERS                            = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_CPU0                             = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_CPU1                             = c_enum(None, 2, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_TBUS_REMOTE                      = c_enum(None, 3, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VML_DMAC                             = c_enum(None, 4, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_VM_CPU1_REMOTE_REQ                   = c_enum(None, 5, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CPU1_ACCESS_FAULT                    = c_enum(None, 6, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE0_RAM0_ACCESS                   = c_enum(None, 9, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE0_RAM1_ACCESS                   = c_enum(None, 10, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE0_TAG_ACCESS                    = c_enum(None, 11, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE1_RAM0_ACCESS                   = c_enum(None, 12, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE1_RAM1_ACCESS                   = c_enum(None, 13, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CACHE1_TAG_ACCESS                    = c_enum(None, 14, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_SQIF0_TBUS_ACCESS                    = c_enum(None, 15, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_SQIF1_TBUS_ACCESS                    = c_enum(None, 16, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CPU0_VM_BUFFER_MAP                   = c_enum(None, 17, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_CPU1_VM_BUFFER_MAP                   = c_enum(None, 18, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_REMOTE_REGISTERS                     = c_enum(None, 19, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_MAX                                  = c_enum(None, 20, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_WIDTH_SPOILER                        = c_enum(None, 2147483647, "", "")
APPS_BANKED_EXCEPTIONS_P0__EXCEPTION_SOURCE_SDIO_HOST_DM0_ACCESS                 = c_enum(None, 8, "", "")
APPS_BANKED_EXCEPTIONS_P0__MUTEX_AVAILABLE                                       = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P0__MUTEX_CLAIMED_BY_P0                                   = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P0__MUTEX_CLAIMED_BY_P1                                   = c_enum(None, 2, "", "")
APPS_BANKED_EXCEPTIONS_P0__MUTEX_CLAIMED_BY_P2                                   = c_enum(None, 4, "", "")
APPS_BANKED_EXCEPTIONS_P0__MUTEX_CLAIMED_BY_P3                                   = c_enum(None, 8, "", "")
APPS_BANKED_EXCEPTIONS_P0__MUTEX_DISABLED                                        = c_enum(None, 15, "", "")



APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL                                            = c_reg(0xffff99cc, 1, 1, 0, "", 4, 15, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P0_ACCESS_PERMISSION = c_bits(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, 0, 0, 0x1, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P0_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P1__P0_ACCESS_BLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, "", 0, "")
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P0_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P1__P0_ACCESS_UNBLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, "", 1, "")
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P1_ACCESS_PERMISSION = c_bits(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, 1, 1, 0x2, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P1_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P1__P1_ACCESS_BLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, "", 0, "")
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P1_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P1__P1_ACCESS_UNBLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, "", 1, "")
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P2_ACCESS_PERMISSION = c_bits(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, 2, 2, 0x4, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P2_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P1__P2_ACCESS_BLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, "", 0, "")
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P2_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P1__P2_ACCESS_UNBLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, "", 1, "")
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P3_ACCESS_PERMISSION = c_bits(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, 3, 3, 0x8, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P3_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P1__P3_ACCESS_BLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, "", 0, "")
APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL.APPS_BANKED_EXCEPTIONS_P1__P3_ACCESS_PERMISSION.APPS_BANKED_EXCEPTIONS_P1__P3_ACCESS_UNBLOCKED = c_value(APPS_BANKED_EXCEPTIONS_P1_ACCESS_CTRL, "", 1, "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES                                                = c_reg(0xffff99c4, 1, 1, 0, "", 20, 262269, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_REGISTERS = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 0, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_CPU0 = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_CPU1 = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 2, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_TBUS_REMOTE = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 3, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_DMAC = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 4, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VM_CPU1_REMOTE_REQ = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 5, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CPU1_ACCESS_FAULT = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 6, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE0_RAM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 9, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE0_RAM1_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 10, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE0_TAG_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 11, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE1_RAM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 12, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE1_RAM1_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 13, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE1_TAG_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 14, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_SQIF0_TBUS_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 15, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_SQIF1_TBUS_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 16, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CPU0_VM_BUFFER_MAP = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 17, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CPU1_VM_BUFFER_MAP = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 18, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_REMOTE_REGISTERS = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 19, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_MAX = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 20, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_WIDTH_SPOILER = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 2147483647, "", "")
APPS_BANKED_EXCEPTIONS_P1_ENABLES.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_SDIO_HOST_DM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_ENABLES, 8, "", "")
APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK                                             = c_reg(0xffff99c8, 1, 1, 0, "", 4, 15, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P1__MUTEX_AVAILABLE  = c_enum(APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK, 0, "", "")
APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P1__MUTEX_CLAIMED_BY_P0 = c_enum(APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P1__MUTEX_CLAIMED_BY_P1 = c_enum(APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK, 2, "", "")
APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P1__MUTEX_CLAIMED_BY_P2 = c_enum(APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK, 4, "", "")
APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P1__MUTEX_CLAIMED_BY_P3 = c_enum(APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK, 8, "", "")
APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK.APPS_BANKED_EXCEPTIONS_P1__MUTEX_DISABLED   = c_enum(APPS_BANKED_EXCEPTIONS_P1_MUTEX_LOCK, 15, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS                                                 = c_reg(0xffff99c0, 1, 1, 0, "", 20, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_REGISTERS = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 0, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_CPU0 = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_CPU1 = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 2, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_TBUS_REMOTE = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 3, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_DMAC = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 4, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VM_CPU1_REMOTE_REQ = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 5, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CPU1_ACCESS_FAULT = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 6, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE0_RAM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 9, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE0_RAM1_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 10, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE0_TAG_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 11, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE1_RAM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 12, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE1_RAM1_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 13, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE1_TAG_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 14, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_SQIF0_TBUS_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 15, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_SQIF1_TBUS_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 16, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CPU0_VM_BUFFER_MAP = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 17, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CPU1_VM_BUFFER_MAP = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 18, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_REMOTE_REGISTERS = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 19, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_MAX = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 20, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_WIDTH_SPOILER = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 2147483647, "", "")
APPS_BANKED_EXCEPTIONS_P1_STATUS.APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_SDIO_HOST_DM0_ACCESS = c_enum(APPS_BANKED_EXCEPTIONS_P1_STATUS, 8, "", "")
APPS_BANKED_EXCEPTIONS_P1__P0_ACCESS_PERMISSION                                  = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P1__P0_ACCESS_BLOCKED                                     = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P1__P0_ACCESS_UNBLOCKED                                   = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1__P1_ACCESS_PERMISSION                                  = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1__P1_ACCESS_BLOCKED                                     = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P1__P1_ACCESS_UNBLOCKED                                   = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1__P2_ACCESS_PERMISSION                                  = c_enum(None, 2, "", "")
APPS_BANKED_EXCEPTIONS_P1__P2_ACCESS_BLOCKED                                     = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P1__P2_ACCESS_UNBLOCKED                                   = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1__P3_ACCESS_PERMISSION                                  = c_enum(None, 3, "", "")
APPS_BANKED_EXCEPTIONS_P1__P3_ACCESS_BLOCKED                                     = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P1__P3_ACCESS_UNBLOCKED                                   = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_REGISTERS                            = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_CPU0                             = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_CPU1                             = c_enum(None, 2, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_TBUS_REMOTE                      = c_enum(None, 3, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VML_DMAC                             = c_enum(None, 4, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_VM_CPU1_REMOTE_REQ                   = c_enum(None, 5, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CPU1_ACCESS_FAULT                    = c_enum(None, 6, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE0_RAM0_ACCESS                   = c_enum(None, 9, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE0_RAM1_ACCESS                   = c_enum(None, 10, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE0_TAG_ACCESS                    = c_enum(None, 11, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE1_RAM0_ACCESS                   = c_enum(None, 12, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE1_RAM1_ACCESS                   = c_enum(None, 13, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CACHE1_TAG_ACCESS                    = c_enum(None, 14, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_SQIF0_TBUS_ACCESS                    = c_enum(None, 15, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_SQIF1_TBUS_ACCESS                    = c_enum(None, 16, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CPU0_VM_BUFFER_MAP                   = c_enum(None, 17, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_CPU1_VM_BUFFER_MAP                   = c_enum(None, 18, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_REMOTE_REGISTERS                     = c_enum(None, 19, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_MAX                                  = c_enum(None, 20, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_WIDTH_SPOILER                        = c_enum(None, 2147483647, "", "")
APPS_BANKED_EXCEPTIONS_P1__EXCEPTION_SOURCE_SDIO_HOST_DM0_ACCESS                 = c_enum(None, 8, "", "")
APPS_BANKED_EXCEPTIONS_P1__MUTEX_AVAILABLE                                       = c_enum(None, 0, "", "")
APPS_BANKED_EXCEPTIONS_P1__MUTEX_CLAIMED_BY_P0                                   = c_enum(None, 1, "", "")
APPS_BANKED_EXCEPTIONS_P1__MUTEX_CLAIMED_BY_P1                                   = c_enum(None, 2, "", "")
APPS_BANKED_EXCEPTIONS_P1__MUTEX_CLAIMED_BY_P2                                   = c_enum(None, 4, "", "")
APPS_BANKED_EXCEPTIONS_P1__MUTEX_CLAIMED_BY_P3                                   = c_enum(None, 8, "", "")
APPS_BANKED_EXCEPTIONS_P1__MUTEX_DISABLED                                        = c_enum(None, 15, "", "")

































VM_CPU1_REQUESTS_WRITE                                                           = c_enum(None, 0, "", "")
VM_CPU1_REQUESTS_READ                                                            = c_enum(None, 1, "", "")



PxD_P0_DM_RAM_LOWER                                                              = c_enum(None, 0, "", "")
PxD_P0_DM_RAM_UPPER                                                              = c_enum(None, 40960, "", "")
PxD_P1_DM_RAM_LOWER                                                              = c_enum(None, 65536, "", "")
PxD_P1_DM_RAM_UPPER                                                              = c_enum(None, 106496, "", "")
MAP_REMOTE_REGISTER_SPACE_LOWER                                                  = c_enum(None, 1610612736, "", "")
MAP_REMOTE_REGISTER_SPACE_UPPER                                                  = c_enum(None, 1610940416, "", "")
MAP_SQIF0_CACHED_LOWER                                                           = c_enum(None, 1879048192, "", "")
MAP_SQIF0_CACHED_UPPER                                                           = c_enum(None, 1887436800, "", "")
MAP_SQIF1_CACHED_LOWER                                                           = c_enum(None, 2013265920, "", "")
MAP_SQIF1_CACHED_UPPER                                                           = c_enum(None, 2021654528, "", "")
MAP_SQIF0_RAM_LOWER                                                              = c_enum(None, 2147483648, "", "")
MAP_SQIF0_RAM_UPPER                                                              = c_enum(None, 2155872256, "", "")
MAP_SQIF1_RAM_LOWER                                                              = c_enum(None, 2281701376, "", "")
MAP_SQIF1_RAM_UPPER                                                              = c_enum(None, 2290089984, "", "")
MAP_REMOTE_SS_ACCESS0_LOWER                                                      = c_enum(None, 2415919104, "", "")
MAP_REMOTE_SS_ACCESS0_UPPER                                                      = c_enum(None, 2550136832, "", "")
MAP_REMOTE_SS_ACCESS1_LOWER                                                      = c_enum(None, 2550136832, "", "")
MAP_REMOTE_SS_ACCESS1_UPPER                                                      = c_enum(None, 2684354560, "", "")
MAP_VM_BUFFER_LOWER                                                              = c_enum(None, 2684354560, "", "")
MAP_VM_BUFFER_UPPER                                                              = c_enum(None, 2952790016, "", "")
MAP_SQIF0_DIRECT_LOWER                                                           = c_enum(None, 2952790016, "", "")
MAP_SQIF0_DIRECT_UPPER                                                           = c_enum(None, 3489660928, "", "")
MAP_SQIF01_DIRECT_LOWER                                                          = c_enum(None, 3489660928, "", "")
MAP_SQIF01_DIRECT_UPPER                                                          = c_enum(None, 4026531840, "", "")
MAP_REGISTER_SPACE_LOWER                                                         = c_enum(None, 4294942720, "", "")
MAP_REGISTER_SPACE_UPPER                                                         = c_enum(None, 4294967292, "", "")
MAP_P0_DM_RAM_LOWER                                                              = c_enum(None, 0, "", "")
MAP_P0_DM_RAM_UPPER                                                              = c_enum(None, 40960, "", "")
MAP_P1_DM_RAM_LOWER                                                              = c_enum(None, 65536, "", "")
MAP_P1_DM_RAM_UPPER                                                              = c_enum(None, 106496, "", "")
MAP_TCM0_LOWER                                                                   = c_enum(None, 536870912, "", "")
MAP_TCM0_UPPER                                                                   = c_enum(None, 536903680, "", "")
MAP_TCM1_LOWER                                                                   = c_enum(None, 536903680, "", "")
MAP_TCM1_UPPER                                                                   = c_enum(None, 536936448, "", "")
MAP_P0_CACHE_DATA_RAM_LOWER                                                      = c_enum(None, 805306368, "", "")
MAP_P0_CACHE_DATA_RAM_UPPER                                                      = c_enum(None, 805339136, "", "")
MAP_P0_CACHE_DATA_RAM0_LOWER                                                     = c_enum(None, 805306368, "", "")
MAP_P0_CACHE_DATA_RAM0_UPPER                                                     = c_enum(None, 805322752, "", "")
MAP_P0_CACHE_DATA_RAM1_LOWER                                                     = c_enum(None, 805322752, "", "")
MAP_P0_CACHE_DATA_RAM1_UPPER                                                     = c_enum(None, 805339136, "", "")
MAP_P0_CACHE_TAG_RAM_LOWER                                                       = c_enum(None, 805339136, "", "")
MAP_P0_CACHE_TAG_RAM_UPPER                                                       = c_enum(None, 805341184, "", "")
MAP_P1_CACHE_DATA_RAM_LOWER                                                      = c_enum(None, 805502976, "", "")
MAP_P1_CACHE_DATA_RAM_UPPER                                                      = c_enum(None, 805519360, "", "")
MAP_P1_CACHE_DATA_RAM0_LOWER                                                     = c_enum(None, 805502976, "", "")
MAP_P1_CACHE_DATA_RAM0_UPPER                                                     = c_enum(None, 805511168, "", "")
MAP_P1_CACHE_DATA_RAM1_LOWER                                                     = c_enum(None, 805511168, "", "")
MAP_P1_CACHE_DATA_RAM1_UPPER                                                     = c_enum(None, 805519360, "", "")
MAP_P1_CACHE_TAG_RAM_LOWER                                                       = c_enum(None, 805519360, "", "")
MAP_P1_CACHE_TAG_RAM_UPPER                                                       = c_enum(None, 805520384, "", "")
MAP_SHARED_DM_RAM_LOWER                                                          = c_enum(None, 268435456, "", "")
MAP_SHARED_DM_RAM_UPPER                                                          = c_enum(None, 268468224, "", "")


















APPS_SYS_CACHE_SEL                                                               = c_reg(0xffff9b30, 1, 1, 0, "", 1, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
APPS_SYS_CACHE_SEL.APPS_SYS_CACHE_SEL                                            = c_bits(APPS_SYS_CACHE_SEL, 0, 0, 0x1, 1, "", "")
APPS_SYS_TEST_REG                                                                = c_reg(0xffff9000, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
APPS_SYS_TEST_REG.APPS_SYS_TEST_REG                                              = c_bits(APPS_SYS_TEST_REG, 0, 31, 0xffffffff, 32, "", "")















BUS_INT_ACCESS_CTRL                                                              = c_reg(0xffff907c, 1, 1, 0, "", 4, 15, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P0_ACCESS_PERMISSION                          = c_bits(BUS_INT_ACCESS_CTRL, 0, 0, 0x1, 1, "", "")
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P0_ACCESS_PERMISSION.BUS_INTERRUPT__P0_ACCESS_BLOCKED = c_value(BUS_INT_ACCESS_CTRL, "", 0, "")
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P0_ACCESS_PERMISSION.BUS_INTERRUPT__P0_ACCESS_UNBLOCKED = c_value(BUS_INT_ACCESS_CTRL, "", 1, "")
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P1_ACCESS_PERMISSION                          = c_bits(BUS_INT_ACCESS_CTRL, 1, 1, 0x2, 1, "", "")
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P1_ACCESS_PERMISSION.BUS_INTERRUPT__P1_ACCESS_BLOCKED = c_value(BUS_INT_ACCESS_CTRL, "", 0, "")
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P1_ACCESS_PERMISSION.BUS_INTERRUPT__P1_ACCESS_UNBLOCKED = c_value(BUS_INT_ACCESS_CTRL, "", 1, "")
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P2_ACCESS_PERMISSION                          = c_bits(BUS_INT_ACCESS_CTRL, 2, 2, 0x4, 1, "", "")
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P2_ACCESS_PERMISSION.BUS_INTERRUPT__P2_ACCESS_BLOCKED = c_value(BUS_INT_ACCESS_CTRL, "", 0, "")
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P2_ACCESS_PERMISSION.BUS_INTERRUPT__P2_ACCESS_UNBLOCKED = c_value(BUS_INT_ACCESS_CTRL, "", 1, "")
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P3_ACCESS_PERMISSION                          = c_bits(BUS_INT_ACCESS_CTRL, 3, 3, 0x8, 1, "", "")
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P3_ACCESS_PERMISSION.BUS_INTERRUPT__P3_ACCESS_BLOCKED = c_value(BUS_INT_ACCESS_CTRL, "", 0, "")
BUS_INT_ACCESS_CTRL.BUS_INTERRUPT__P3_ACCESS_PERMISSION.BUS_INTERRUPT__P3_ACCESS_UNBLOCKED = c_value(BUS_INT_ACCESS_CTRL, "", 1, "")
BUS_INT_CLEAR                                                                    = c_reg(0xffff9058, 1, 1, 0, "", 16, 0, 1, 0, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_CLEAR.BUS_INT_CLEAR                                                      = c_bits(BUS_INT_CLEAR, 0, 15, 0xffff, 16, "", "")
BUS_INT_CONFIG                                                                   = c_reg(0xffff9060, 1, 1, 0, "", 10, 0, 1, 0, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_CONFIG.BUS_INT_CONFIG_SUBSYSTEM                                          = c_bits(BUS_INT_CONFIG, 0, 3, 0xf, 4, "", "")
BUS_INT_CONFIG.BUS_INT_CONFIG_BLOCK                                              = c_bits(BUS_INT_CONFIG, 4, 7, 0xf0, 4, "", "")
BUS_INT_CONFIG.BUS_INT_CONFIG_ENABLE                                             = c_bits(BUS_INT_CONFIG, 8, 8, 0x100, 1, "", "")
BUS_INT_CONFIG.BUS_INT_CONFIG_STATUS_CLEAR_ON_READ                               = c_bits(BUS_INT_CONFIG, 9, 9, 0x200, 1, "", "")
BUS_INT_CONFIG_STATUS                                                            = c_reg(0xffff9064, 1, 0, 0, "", 10, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_CONFIG_STATUS.BUS_INT_CONFIG_SUBSYSTEM                                   = c_bits(BUS_INT_CONFIG_STATUS, 0, 3, 0xf, 4, "", "")
BUS_INT_CONFIG_STATUS.BUS_INT_CONFIG_BLOCK                                       = c_bits(BUS_INT_CONFIG_STATUS, 4, 7, 0xf0, 4, "", "")
BUS_INT_CONFIG_STATUS.BUS_INT_CONFIG_ENABLE                                      = c_bits(BUS_INT_CONFIG_STATUS, 8, 8, 0x100, 1, "", "")
BUS_INT_CONFIG_STATUS.BUS_INT_CONFIG_STATUS_CLEAR_ON_READ                        = c_bits(BUS_INT_CONFIG_STATUS, 9, 9, 0x200, 1, "", "")
BUS_INT_MASK                                                                     = c_reg(0xffff9054, 1, 1, 0, "", 16, 0, 1, 0, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_MASK_STATUS                                                              = c_reg(0xffff9068, 1, 0, 0, "", 16, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_MASK_STATUS.BUS_INT_MASK_STATUS                                          = c_bits(BUS_INT_MASK_STATUS, 0, 15, 0xffff, 16, "", "")
BUS_INT_MUTEX_LOCK                                                               = c_reg(0xffff9078, 1, 1, 0, "", 4, 15, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_MUTEX_LOCK.BUS_INTERRUPT__MUTEX_AVAILABLE                                = c_enum(BUS_INT_MUTEX_LOCK, 0, "", "")
BUS_INT_MUTEX_LOCK.BUS_INTERRUPT__MUTEX_CLAIMED_BY_P0                            = c_enum(BUS_INT_MUTEX_LOCK, 1, "", "")
BUS_INT_MUTEX_LOCK.BUS_INTERRUPT__MUTEX_CLAIMED_BY_P1                            = c_enum(BUS_INT_MUTEX_LOCK, 2, "", "")
BUS_INT_MUTEX_LOCK.BUS_INTERRUPT__MUTEX_CLAIMED_BY_P2                            = c_enum(BUS_INT_MUTEX_LOCK, 4, "", "")
BUS_INT_MUTEX_LOCK.BUS_INTERRUPT__MUTEX_CLAIMED_BY_P3                            = c_enum(BUS_INT_MUTEX_LOCK, 8, "", "")
BUS_INT_MUTEX_LOCK.BUS_INTERRUPT__MUTEX_DISABLED                                 = c_enum(BUS_INT_MUTEX_LOCK, 15, "", "")
BUS_INT_SELECT                                                                   = c_reg(0xffff9050, 1, 1, 0, "", 4, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_SELECT.BUS_INT_SELECT                                                    = c_bits(BUS_INT_SELECT, 0, 3, 0xf, 4, "", "")
BUS_INT_SEND_INT_CONFIG                                                          = c_reg(0xffff906c, 1, 1, 0, "", 12, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_SEND_INT_CONFIG.BUS_INT_SEND_INT_CONFIG_SUBSYSTEM                        = c_bits(BUS_INT_SEND_INT_CONFIG, 0, 3, 0xf, 4, "", "")
BUS_INT_SEND_INT_CONFIG.BUS_INT_SEND_INT_CONFIG_SRC_BLOCK_ID                     = c_bits(BUS_INT_SEND_INT_CONFIG, 4, 7, 0xf0, 4, "", "")
BUS_INT_SEND_INT_CONFIG.BUS_INT_SEND_INT_CONFIG_DEST_BLOCK_ID                    = c_bits(BUS_INT_SEND_INT_CONFIG, 8, 11, 0xf00, 4, "", "")
BUS_INT_SEND_INT_SEND_STATUS                                                     = c_reg(0xffff9074, 1, 0, 0, "", 2, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_SEND_INT_SEND_STATUS.BUS_INT_SEND_INT_SEND_STATUS                        = c_bits(BUS_INT_SEND_INT_SEND_STATUS, 0, 1, 0x3, 2, "", "")
BUS_INT_SEND_INT_STATUS_FIELD                                                    = c_reg(0xffff9070, 1, 1, 0, "", 16, 0, 1, 0, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_SEND_INT_STATUS_FIELD.BUS_INT_SEND_INT_STATUS_FIELD                      = c_bits(BUS_INT_SEND_INT_STATUS_FIELD, 0, 15, 0xffff, 16, "", "")
BUS_INT_STATUS                                                                   = c_reg(0xffff905c, 1, 0, 0, "", 16, 0, 0, 1, "", "", "", "", "", 1, 1, "", "", 0)
BUS_INT_STATUS.BUS_INT_STATUS                                                    = c_bits(BUS_INT_STATUS, 0, 15, 0xffff, 16, "", "")
BUS_INT_CONFIG_SUBSYSTEM                                                         = c_enum(None, 0, "", "")
BUS_INT_CONFIG_BLOCK                                                             = c_enum(None, 4, "", "")
BUS_INT_CONFIG_ENABLE                                                            = c_enum(None, 8, "", "")
BUS_INT_CONFIG_STATUS_CLEAR_ON_READ                                              = c_enum(None, 9, "", "")












HOST_SYS_REG_ACCESS_SUBSYS_IN_ADDR_EN                                            = c_reg(0x6004d05c, 1, 1, 0, "", 16, 1, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
HOST_SYS_REG_ACCESS_SUBSYS_IN_ADDR_EN.HOST_SYS_REG_ACCESS_SUBSYS_IN_ADDR_EN      = c_bits(HOST_SYS_REG_ACCESS_SUBSYS_IN_ADDR_EN, 0, 15, 0xffff, 16, "", "")



ARITHMETIC_MODE                                                                  = c_reg(0xffff8014, 1, 1, 0, "", 5, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
ARITHMETIC_MODE.ADDSUB_SATURATE_ON_OVERFLOW                                      = c_bits(ARITHMETIC_MODE, 0, 0, 0x1, 1, "", "")
ARITHMETIC_MODE.ARITHMETIC_16BIT_MODE                                            = c_bits(ARITHMETIC_MODE, 1, 1, 0x2, 1, "", "")
ARITHMETIC_MODE.DISABLE_UNBIASED_ROUNDING                                        = c_bits(ARITHMETIC_MODE, 2, 2, 0x4, 1, "", "")
ARITHMETIC_MODE.DISABLE_FRAC_MULT_ROUNDING                                       = c_bits(ARITHMETIC_MODE, 3, 3, 0x8, 1, "", "")
ARITHMETIC_MODE.DISABLE_RMAC_STORE_ROUNDING                                      = c_bits(ARITHMETIC_MODE, 4, 4, 0x10, 1, "", "")
BITREVERSE_ADDR                                                                  = c_reg(0xffff8038, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
BITREVERSE_ADDR.BITREVERSE_ADDR                                                  = c_bits(BITREVERSE_ADDR, 0, 31, 0xffffffff, 32, "", "")
BITREVERSE_DATA                                                                  = c_reg(0xffff8030, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
BITREVERSE_DATA.BITREVERSE_DATA                                                  = c_bits(BITREVERSE_DATA, 0, 31, 0xffffffff, 32, "", "")
BITREVERSE_DATA16                                                                = c_reg(0xffff8034, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
BITREVERSE_DATA16.BITREVERSE_DATA16                                              = c_bits(BITREVERSE_DATA16, 0, 31, 0xffffffff, 32, "", "")
BITREVERSE_VAL                                                                   = c_reg(0xffff802c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
BITREVERSE_VAL.BITREVERSE_VAL                                                    = c_bits(BITREVERSE_VAL, 0, 31, 0xffffffff, 32, "", "")
DBG_COUNTERS_EN                                                                  = c_reg(0xffff8050, 1, 1, 0, "", 1, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DBG_COUNTERS_EN.DBG_COUNTERS_EN                                                  = c_bits(DBG_COUNTERS_EN, 0, 0, 0x1, 1, "", "")
FRAME_POINTER                                                                    = c_reg(0xffff8028, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
FRAME_POINTER.FRAME_POINTER                                                      = c_bits(FRAME_POINTER, 0, 31, 0xffffffff, 32, "", "")
MM_DOLOOP_END                                                                    = c_reg(0xffff8004, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
MM_DOLOOP_END.MM_DOLOOP_END                                                      = c_bits(MM_DOLOOP_END, 0, 31, 0xffffffff, 32, "", "")
MM_DOLOOP_START                                                                  = c_reg(0xffff8000, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
MM_DOLOOP_START.MM_DOLOOP_START                                                  = c_bits(MM_DOLOOP_START, 0, 31, 0xffffffff, 32, "", "")
MM_QUOTIENT                                                                      = c_reg(0xffff8008, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
MM_QUOTIENT.MM_QUOTIENT                                                          = c_bits(MM_QUOTIENT, 0, 31, 0xffffffff, 32, "", "")
MM_REM                                                                           = c_reg(0xffff800c, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
MM_REM.MM_REM                                                                    = c_bits(MM_REM, 0, 31, 0xffffffff, 32, "", "")
MM_RINTLINK                                                                      = c_reg(0xffff8010, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
MM_RINTLINK.MM_RINTLINK                                                          = c_bits(MM_RINTLINK, 0, 31, 0xffffffff, 32, "", "")
NUM_CORE_STALLS                                                                  = c_reg(0xffff8044, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
NUM_CORE_STALLS.NUM_CORE_STALLS                                                  = c_bits(NUM_CORE_STALLS, 0, 31, 0xffffffff, 32, "", "")
NUM_INSTRS                                                                       = c_reg(0xffff8040, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
NUM_INSTRS.NUM_INSTRS                                                            = c_bits(NUM_INSTRS, 0, 31, 0xffffffff, 32, "", "")
NUM_RUN_CLKS                                                                     = c_reg(0xffff803c, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
NUM_RUN_CLKS.NUM_RUN_CLKS                                                        = c_bits(NUM_RUN_CLKS, 0, 31, 0xffffffff, 32, "", "")
PC_STATUS                                                                        = c_reg(0xffff8054, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
PC_STATUS.PC_STATUS                                                              = c_bits(PC_STATUS, 0, 31, 0xffffffff, 32, "", "")
STACK_END_ADDR                                                                   = c_reg(0xffff801c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
STACK_END_ADDR.STACK_END_ADDR                                                    = c_bits(STACK_END_ADDR, 0, 31, 0xffffffff, 32, "", "")
STACK_OVERFLOW_PC                                                                = c_reg(0xffff8024, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
STACK_OVERFLOW_PC.STACK_OVERFLOW_PC                                              = c_bits(STACK_OVERFLOW_PC, 0, 31, 0xffffffff, 32, "", "")
STACK_POINTER                                                                    = c_reg(0xffff8020, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
STACK_POINTER.STACK_POINTER                                                      = c_bits(STACK_POINTER, 0, 31, 0xffffffff, 32, "", "")
STACK_START_ADDR                                                                 = c_reg(0xffff8018, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
STACK_START_ADDR.STACK_START_ADDR                                                = c_bits(STACK_START_ADDR, 0, 31, 0xffffffff, 32, "", "")
TEST_REG_0                                                                       = c_reg(0xffff8058, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
TEST_REG_0.TEST_REG_0                                                            = c_bits(TEST_REG_0, 0, 31, 0xffffffff, 32, "", "")
TEST_REG_1                                                                       = c_reg(0xffff805c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
TEST_REG_1.TEST_REG_1                                                            = c_bits(TEST_REG_1, 0, 31, 0xffffffff, 32, "", "")
TEST_REG_2                                                                       = c_reg(0xffff8060, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
TEST_REG_2.TEST_REG_2                                                            = c_bits(TEST_REG_2, 0, 31, 0xffffffff, 32, "", "")
TEST_REG_3                                                                       = c_reg(0xffff8064, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
TEST_REG_3.TEST_REG_3                                                            = c_bits(TEST_REG_3, 0, 31, 0xffffffff, 32, "", "")



DEBUG                                                                            = c_reg(0xfffffe30, 1, 1, 0, "", 19, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DEBUG.DEBUG_RUN                                                                  = c_bits(DEBUG, 0, 0, 0x1, 1, "", "")
DEBUG.DEBUG_STEP                                                                 = c_bits(DEBUG, 1, 1, 0x2, 1, "", "")
DEBUG.DEBUG_DUMMY                                                                = c_bits(DEBUG, 2, 2, 0x4, 1, "", "")
DEBUG.DEBUG_PM_BREAK0                                                            = c_bits(DEBUG, 3, 3, 0x8, 1, "", "")
DEBUG.DEBUG_PM_BREAK1                                                            = c_bits(DEBUG, 4, 4, 0x10, 1, "", "")
DEBUG.DEBUG_PM_BREAK2                                                            = c_bits(DEBUG, 5, 5, 0x20, 1, "", "")
DEBUG.DEBUG_PM_BREAK3                                                            = c_bits(DEBUG, 6, 6, 0x40, 1, "", "")
DEBUG.DEBUG_PM_BREAK4                                                            = c_bits(DEBUG, 7, 7, 0x80, 1, "", "")
DEBUG.DEBUG_PM_BREAK5                                                            = c_bits(DEBUG, 8, 8, 0x100, 1, "", "")
DEBUG.DEBUG_PM_BREAK6                                                            = c_bits(DEBUG, 9, 9, 0x200, 1, "", "")
DEBUG.DEBUG_PM_BREAK7                                                            = c_bits(DEBUG, 10, 10, 0x400, 1, "", "")
DEBUG.DEBUG_DM_WRITE_BREAK0                                                      = c_bits(DEBUG, 11, 11, 0x800, 1, "", "")
DEBUG.DEBUG_DM_READ_BREAK0                                                       = c_bits(DEBUG, 12, 12, 0x1000, 1, "", "")
DEBUG.DEBUG_DM_WRITE_BREAK1                                                      = c_bits(DEBUG, 13, 13, 0x2000, 1, "", "")
DEBUG.DEBUG_DM_READ_BREAK1                                                       = c_bits(DEBUG, 14, 14, 0x4000, 1, "", "")
DEBUG.DEBUG_DM_BYTE_MATCH_EN_BREAK0                                              = c_bits(DEBUG, 15, 15, 0x8000, 1, "", "")
DEBUG.DEBUG_DM_DATA_MATCH_EN_BREAK0                                              = c_bits(DEBUG, 16, 16, 0x10000, 1, "", "")
DEBUG.DEBUG_DM_BYTE_MATCH_EN_BREAK1                                              = c_bits(DEBUG, 17, 17, 0x20000, 1, "", "")
DEBUG.DEBUG_DM_DATA_MATCH_EN_BREAK1                                              = c_bits(DEBUG, 18, 18, 0x40000, 1, "", "")
DEBUG_PM_BREAK7_ENABLED                                                          = c_reg(0xfffffe60, 1, 1, 0, "", 7, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
DEBUG_PM_BREAK7_ENABLED.DEBUG_PM_BREAK7_ENABLED                                  = c_bits(DEBUG_PM_BREAK7_ENABLED, 0, 6, 0x7f, 7, "", "")
DEBUG_PM_BREAK7_ENABLES                                                          = c_reg(0xfffffe5c, 1, 1, 0, "", 7, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DEBUG_PM_BREAK7_ENABLES.DEBUG_PM_BREAK7_ENABLES                                  = c_bits(DEBUG_PM_BREAK7_ENABLES, 0, 6, 0x7f, 7, "", "")
DM_BREAK0_BYTE_SELECT                                                            = c_reg(0xfffffe40, 1, 1, 0, "", 4, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DM_BREAK0_BYTE_SELECT.DM_BREAK0_BYTE_SELECT                                      = c_bits(DM_BREAK0_BYTE_SELECT, 0, 3, 0xf, 4, "", "")
DM_BREAK0_DATA_MASK                                                              = c_reg(0xfffffe48, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DM_BREAK0_DATA_VALUE                                                             = c_reg(0xfffffe44, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DM_BREAK0_DATA_VALUE.DM_BREAK0_DATA_VALUE                                        = c_bits(DM_BREAK0_DATA_VALUE, 0, 31, 0xffffffff, 32, "", "")
DM_BREAK0_END_ADDR                                                               = c_reg(0xfffffe04, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DM_BREAK0_END_ADDR.DM_BREAK0_END_ADDR                                            = c_bits(DM_BREAK0_END_ADDR, 0, 31, 0xffffffff, 32, "", "")
DM_BREAK0_START_ADDR                                                             = c_reg(0xfffffe00, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DM_BREAK0_START_ADDR.DM_BREAK0_START_ADDR                                        = c_bits(DM_BREAK0_START_ADDR, 0, 31, 0xffffffff, 32, "", "")
DM_BREAK1_BYTE_SELECT                                                            = c_reg(0xfffffe4c, 1, 1, 0, "", 4, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DM_BREAK1_BYTE_SELECT.DM_BREAK1_BYTE_SELECT                                      = c_bits(DM_BREAK1_BYTE_SELECT, 0, 3, 0xf, 4, "", "")
DM_BREAK1_DATA_MASK                                                              = c_reg(0xfffffe54, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DM_BREAK1_DATA_VALUE                                                             = c_reg(0xfffffe50, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DM_BREAK1_DATA_VALUE.DM_BREAK1_DATA_VALUE                                        = c_bits(DM_BREAK1_DATA_VALUE, 0, 31, 0xffffffff, 32, "", "")
DM_BREAK1_END_ADDR                                                               = c_reg(0xfffffe0c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DM_BREAK1_END_ADDR.DM_BREAK1_END_ADDR                                            = c_bits(DM_BREAK1_END_ADDR, 0, 31, 0xffffffff, 32, "", "")
DM_BREAK1_START_ADDR                                                             = c_reg(0xfffffe08, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DM_BREAK1_START_ADDR.DM_BREAK1_START_ADDR                                        = c_bits(DM_BREAK1_START_ADDR, 0, 31, 0xffffffff, 32, "", "")
EXTERNAL_BREAK                                                                   = c_reg(0xfffffe38, 1, 1, 0, "", 2, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
EXTERNAL_BREAK.EXTERNAL_BREAK_RECEIVE_EN                                         = c_bits(EXTERNAL_BREAK, 0, 0, 0x1, 1, "", "")
EXTERNAL_BREAK.EXTERNAL_BREAK_SEND_EN                                            = c_bits(EXTERNAL_BREAK, 1, 1, 0x2, 1, "", "")
EXTERNAL_BREAK_STATUS                                                            = c_reg(0xfffffe58, 1, 1, 0, "", 1, 0, 1, 0, "", "", "", "", "", 0, 1, "", "", 0)
EXTERNAL_BREAK_STATUS.EXTERNAL_BREAK_STATUS                                      = c_bits(EXTERNAL_BREAK_STATUS, 0, 0, 0x1, 1, "", "")
INTERPROC_BREAK                                                                  = c_reg(0xfffffe3c, 1, 1, 0, "", 2, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INTERPROC_BREAK.INTERPROC_BREAK_RECEIVE_EN                                       = c_bits(INTERPROC_BREAK, 0, 0, 0x1, 1, "", "")
INTERPROC_BREAK.INTERPROC_BREAK_SEND_EN                                          = c_bits(INTERPROC_BREAK, 1, 1, 0x2, 1, "", "")
PM_BREAK0_ADDR                                                                   = c_reg(0xfffffe10, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
PM_BREAK0_ADDR.PM_BREAK0_ADDR                                                    = c_bits(PM_BREAK0_ADDR, 0, 31, 0xffffffff, 32, "", "")
PM_BREAK1_ADDR                                                                   = c_reg(0xfffffe14, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
PM_BREAK1_ADDR.PM_BREAK1_ADDR                                                    = c_bits(PM_BREAK1_ADDR, 0, 31, 0xffffffff, 32, "", "")
PM_BREAK2_ADDR                                                                   = c_reg(0xfffffe18, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
PM_BREAK2_ADDR.PM_BREAK2_ADDR                                                    = c_bits(PM_BREAK2_ADDR, 0, 31, 0xffffffff, 32, "", "")
PM_BREAK3_ADDR                                                                   = c_reg(0xfffffe1c, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
PM_BREAK3_ADDR.PM_BREAK3_ADDR                                                    = c_bits(PM_BREAK3_ADDR, 0, 31, 0xffffffff, 32, "", "")
PM_BREAK4_ADDR                                                                   = c_reg(0xfffffe20, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
PM_BREAK4_ADDR.PM_BREAK4_ADDR                                                    = c_bits(PM_BREAK4_ADDR, 0, 31, 0xffffffff, 32, "", "")
PM_BREAK5_ADDR                                                                   = c_reg(0xfffffe24, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
PM_BREAK5_ADDR.PM_BREAK5_ADDR                                                    = c_bits(PM_BREAK5_ADDR, 0, 31, 0xffffffff, 32, "", "")
PM_BREAK6_ADDR                                                                   = c_reg(0xfffffe28, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
PM_BREAK6_ADDR.PM_BREAK6_ADDR                                                    = c_bits(PM_BREAK6_ADDR, 0, 31, 0xffffffff, 32, "", "")
PM_BREAK7_ADDR                                                                   = c_reg(0xfffffe2c, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
PM_BREAK7_ADDR.PM_BREAK7_ADDR                                                    = c_bits(PM_BREAK7_ADDR, 0, 31, 0xffffffff, 32, "", "")
REGFILE_PC                                                                       = c_reg(0xffffff00, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_PC.REGFILE_PC                                                            = c_bits(REGFILE_PC, 0, 31, 0xffffffff, 32, "", "")
STATUS                                                                           = c_reg(0xfffffe34, 1, 0, 0, "", 17, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
STATUS.STATUS_RUNNING                                                            = c_bits(STATUS, 0, 0, 0x1, 1, "", "")
STATUS.STATUS_PM_BREAK                                                           = c_bits(STATUS, 1, 1, 0x2, 1, "", "")
STATUS.STATUS_DM_BREAK0                                                          = c_bits(STATUS, 2, 2, 0x4, 1, "", "")
STATUS.STATUS_DM_BREAK1                                                          = c_bits(STATUS, 3, 3, 0x8, 1, "", "")
STATUS.STATUS_DUMMY                                                              = c_bits(STATUS, 4, 4, 0x10, 1, "", "")
STATUS.STATUS_PM_WAIT_IN                                                         = c_bits(STATUS, 5, 5, 0x20, 1, "", "")
STATUS.STATUS_DM1_WAIT_IN                                                        = c_bits(STATUS, 6, 6, 0x40, 1, "", "")
STATUS.STATUS_DM2_WAIT_IN                                                        = c_bits(STATUS, 7, 7, 0x80, 1, "", "")
STATUS.STATUS_RETRYPMREAD                                                        = c_bits(STATUS, 8, 8, 0x100, 1, "", "")
STATUS.STATUS_DLYRUNNING                                                         = c_bits(STATUS, 9, 9, 0x200, 1, "", "")
STATUS.STATUS_SINGSTEPCOMP                                                       = c_bits(STATUS, 10, 10, 0x400, 1, "", "")
STATUS.STATUS_PROCESSING                                                         = c_bits(STATUS, 11, 11, 0x800, 1, "", "")
STATUS.STATUS_EXECUTING                                                          = c_bits(STATUS, 12, 12, 0x1000, 1, "", "")
STATUS.STATUS_STALLEDPM                                                          = c_bits(STATUS, 13, 13, 0x2000, 1, "", "")
STATUS.STATUS_EXCEPTION_BREAK                                                    = c_bits(STATUS, 14, 14, 0x4000, 1, "", "")
STATUS.STATUS_EXTERNAL_BREAK                                                     = c_bits(STATUS, 15, 15, 0x8000, 1, "", "")
STATUS.STATUS_INTERPROC_BREAK                                                    = c_bits(STATUS, 16, 16, 0x10000, 1, "", "")



REGFILE_B0                                                                       = c_reg(0xffffffa4, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_B0.REGFILE_B0                                                            = c_bits(REGFILE_B0, 0, 31, 0xffffffff, 32, "", "")
REGFILE_B1                                                                       = c_reg(0xffffffa8, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_B1.REGFILE_B1                                                            = c_bits(REGFILE_B1, 0, 31, 0xffffffff, 32, "", "")
REGFILE_B4                                                                       = c_reg(0xffffffac, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_B4.REGFILE_B4                                                            = c_bits(REGFILE_B4, 0, 31, 0xffffffff, 32, "", "")
REGFILE_B5                                                                       = c_reg(0xffffffb0, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_B5.REGFILE_B5                                                            = c_bits(REGFILE_B5, 0, 31, 0xffffffff, 32, "", "")
REGFILE_FP                                                                       = c_reg(0xffffffb4, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_FP.REGFILE_FP                                                            = c_bits(REGFILE_FP, 0, 31, 0xffffffff, 32, "", "")
REGFILE_I0                                                                       = c_reg(0xffffff4c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_I0.REGFILE_I0                                                            = c_bits(REGFILE_I0, 0, 31, 0xffffffff, 32, "", "")
REGFILE_I1                                                                       = c_reg(0xffffff50, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_I1.REGFILE_I1                                                            = c_bits(REGFILE_I1, 0, 31, 0xffffffff, 32, "", "")
REGFILE_I2                                                                       = c_reg(0xffffff54, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_I2.REGFILE_I2                                                            = c_bits(REGFILE_I2, 0, 31, 0xffffffff, 32, "", "")
REGFILE_I3                                                                       = c_reg(0xffffff58, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_I3.REGFILE_I3                                                            = c_bits(REGFILE_I3, 0, 31, 0xffffffff, 32, "", "")
REGFILE_I4                                                                       = c_reg(0xffffff5c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_I4.REGFILE_I4                                                            = c_bits(REGFILE_I4, 0, 31, 0xffffffff, 32, "", "")
REGFILE_I5                                                                       = c_reg(0xffffff60, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_I5.REGFILE_I5                                                            = c_bits(REGFILE_I5, 0, 31, 0xffffffff, 32, "", "")
REGFILE_I6                                                                       = c_reg(0xffffff64, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_I6.REGFILE_I6                                                            = c_bits(REGFILE_I6, 0, 31, 0xffffffff, 32, "", "")
REGFILE_I7                                                                       = c_reg(0xffffff68, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_I7.REGFILE_I7                                                            = c_bits(REGFILE_I7, 0, 31, 0xffffffff, 32, "", "")
REGFILE_L0                                                                       = c_reg(0xffffff7c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_L0.REGFILE_L0                                                            = c_bits(REGFILE_L0, 0, 31, 0xffffffff, 32, "", "")
REGFILE_L1                                                                       = c_reg(0xffffff80, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_L1.REGFILE_L1                                                            = c_bits(REGFILE_L1, 0, 31, 0xffffffff, 32, "", "")
REGFILE_L4                                                                       = c_reg(0xffffff84, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_L4.REGFILE_L4                                                            = c_bits(REGFILE_L4, 0, 31, 0xffffffff, 32, "", "")
REGFILE_L5                                                                       = c_reg(0xffffff88, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_L5.REGFILE_L5                                                            = c_bits(REGFILE_L5, 0, 31, 0xffffffff, 32, "", "")
REGFILE_M0                                                                       = c_reg(0xffffff6c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_M0.REGFILE_M0                                                            = c_bits(REGFILE_M0, 0, 31, 0xffffffff, 32, "", "")
REGFILE_M1                                                                       = c_reg(0xffffff70, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_M1.REGFILE_M1                                                            = c_bits(REGFILE_M1, 0, 31, 0xffffffff, 32, "", "")
REGFILE_M2                                                                       = c_reg(0xffffff74, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_M2.REGFILE_M2                                                            = c_bits(REGFILE_M2, 0, 31, 0xffffffff, 32, "", "")
REGFILE_M3                                                                       = c_reg(0xffffff78, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_M3.REGFILE_M3                                                            = c_bits(REGFILE_M3, 0, 31, 0xffffffff, 32, "", "")
REGFILE_NUM_CORE_STALLS                                                          = c_reg(0xffffff94, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_NUM_CORE_STALLS.REGFILE_NUM_CORE_STALLS                                  = c_bits(REGFILE_NUM_CORE_STALLS, 0, 31, 0xffffffff, 32, "", "")
REGFILE_NUM_INSTRS                                                               = c_reg(0xffffff90, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_NUM_INSTRS.REGFILE_NUM_INSTRS                                            = c_bits(REGFILE_NUM_INSTRS, 0, 31, 0xffffffff, 32, "", "")
REGFILE_NUM_RUNCLKS                                                              = c_reg(0xffffff8c, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_NUM_RUNCLKS.REGFILE_NUM_RUNCLKS                                          = c_bits(REGFILE_NUM_RUNCLKS, 0, 31, 0xffffffff, 32, "", "")
REGFILE_R0                                                                       = c_reg(0xffffff14, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_R0.REGFILE_R0                                                            = c_bits(REGFILE_R0, 0, 31, 0xffffffff, 32, "", "")
REGFILE_R1                                                                       = c_reg(0xffffff18, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_R1.REGFILE_R1                                                            = c_bits(REGFILE_R1, 0, 31, 0xffffffff, 32, "", "")
REGFILE_R10                                                                      = c_reg(0xffffff3c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_R10.REGFILE_R10                                                          = c_bits(REGFILE_R10, 0, 31, 0xffffffff, 32, "", "")
REGFILE_R2                                                                       = c_reg(0xffffff1c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_R2.REGFILE_R2                                                            = c_bits(REGFILE_R2, 0, 31, 0xffffffff, 32, "", "")
REGFILE_R3                                                                       = c_reg(0xffffff20, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_R3.REGFILE_R3                                                            = c_bits(REGFILE_R3, 0, 31, 0xffffffff, 32, "", "")
REGFILE_R4                                                                       = c_reg(0xffffff24, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_R4.REGFILE_R4                                                            = c_bits(REGFILE_R4, 0, 31, 0xffffffff, 32, "", "")
REGFILE_R5                                                                       = c_reg(0xffffff28, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_R5.REGFILE_R5                                                            = c_bits(REGFILE_R5, 0, 31, 0xffffffff, 32, "", "")
REGFILE_R6                                                                       = c_reg(0xffffff2c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_R6.REGFILE_R6                                                            = c_bits(REGFILE_R6, 0, 31, 0xffffffff, 32, "", "")
REGFILE_R7                                                                       = c_reg(0xffffff30, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_R7.REGFILE_R7                                                            = c_bits(REGFILE_R7, 0, 31, 0xffffffff, 32, "", "")
REGFILE_R8                                                                       = c_reg(0xffffff34, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_R8.REGFILE_R8                                                            = c_bits(REGFILE_R8, 0, 31, 0xffffffff, 32, "", "")
REGFILE_R9                                                                       = c_reg(0xffffff38, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_R9.REGFILE_R9                                                            = c_bits(REGFILE_R9, 0, 31, 0xffffffff, 32, "", "")
REGFILE_RFLAGS                                                                   = c_reg(0xffffff44, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_RFLAGS.N_FLAG                                                            = c_bits(REGFILE_RFLAGS, 0, 0, 0x1, 1, "", "")
REGFILE_RFLAGS.Z_FLAG                                                            = c_bits(REGFILE_RFLAGS, 1, 1, 0x2, 1, "", "")
REGFILE_RFLAGS.C_FLAG                                                            = c_bits(REGFILE_RFLAGS, 2, 2, 0x4, 1, "", "")
REGFILE_RFLAGS.V_FLAG                                                            = c_bits(REGFILE_RFLAGS, 3, 3, 0x8, 1, "", "")
REGFILE_RFLAGS.UD_FLAG                                                           = c_bits(REGFILE_RFLAGS, 4, 4, 0x10, 1, "", "")
REGFILE_RFLAGS.SV_FLAG                                                           = c_bits(REGFILE_RFLAGS, 5, 5, 0x20, 1, "", "")
REGFILE_RFLAGS.BR_FLAG                                                           = c_bits(REGFILE_RFLAGS, 6, 6, 0x40, 1, "", "")
REGFILE_RFLAGS.UM_FLAG                                                           = c_bits(REGFILE_RFLAGS, 7, 7, 0x80, 1, "", "")
REGFILE_RFLAGS.INT_N_FLAG                                                        = c_bits(REGFILE_RFLAGS, 8, 8, 0x100, 1, "", "")
REGFILE_RFLAGS.INT_Z_FLAG                                                        = c_bits(REGFILE_RFLAGS, 9, 9, 0x200, 1, "", "")
REGFILE_RFLAGS.INT_C_FLAG                                                        = c_bits(REGFILE_RFLAGS, 10, 10, 0x400, 1, "", "")
REGFILE_RFLAGS.INT_V_FLAG                                                        = c_bits(REGFILE_RFLAGS, 11, 11, 0x800, 1, "", "")
REGFILE_RFLAGS.INT_UD_FLAG                                                       = c_bits(REGFILE_RFLAGS, 12, 12, 0x1000, 1, "", "")
REGFILE_RFLAGS.INT_SV_FLAG                                                       = c_bits(REGFILE_RFLAGS, 13, 13, 0x2000, 1, "", "")
REGFILE_RFLAGS.INT_BR_FLAG                                                       = c_bits(REGFILE_RFLAGS, 14, 14, 0x4000, 1, "", "")
REGFILE_RFLAGS.INT_UM_FLAG                                                       = c_bits(REGFILE_RFLAGS, 15, 15, 0x8000, 1, "", "")
REGFILE_RFLAGS.UNUSED                                                            = c_bits(REGFILE_RFLAGS, 16, 31, 0xffff0000, 16, "", "")
REGFILE_RLINK                                                                    = c_reg(0xffffff40, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_RLINK.REGFILE_RLINK                                                      = c_bits(REGFILE_RLINK, 0, 31, 0xffffffff, 32, "", "")
REGFILE_RMAC0                                                                    = c_reg(0xffffff0c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_RMAC0.REGFILE_RMAC0                                                      = c_bits(REGFILE_RMAC0, 0, 31, 0xffffffff, 32, "", "")
REGFILE_RMAC1                                                                    = c_reg(0xffffff08, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_RMAC1.REGFILE_RMAC1                                                      = c_bits(REGFILE_RMAC1, 0, 31, 0xffffffff, 32, "", "")
REGFILE_RMAC2                                                                    = c_reg(0xffffff04, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_RMAC2.REGFILE_RMAC2                                                      = c_bits(REGFILE_RMAC2, 0, 31, 0xffffffff, 32, "", "")
REGFILE_RMAC24                                                                   = c_reg(0xffffff10, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_RMAC24.REGFILE_RMAC24                                                    = c_bits(REGFILE_RMAC24, 0, 31, 0xffffffff, 32, "", "")
REGFILE_RMACB0                                                                   = c_reg(0xffffffa0, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_RMACB0.REGFILE_RMACB0                                                    = c_bits(REGFILE_RMACB0, 0, 31, 0xffffffff, 32, "", "")
REGFILE_RMACB1                                                                   = c_reg(0xffffff9c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_RMACB1.REGFILE_RMACB1                                                    = c_bits(REGFILE_RMACB1, 0, 31, 0xffffffff, 32, "", "")
REGFILE_RMACB2                                                                   = c_reg(0xffffff98, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_RMACB2.REGFILE_RMACB2                                                    = c_bits(REGFILE_RMACB2, 0, 31, 0xffffffff, 32, "", "")
REGFILE_RMACB24                                                                  = c_reg(0xffffff48, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_RMACB24.REGFILE_RMACB24                                                  = c_bits(REGFILE_RMACB24, 0, 31, 0xffffffff, 32, "", "")
REGFILE_SP                                                                       = c_reg(0xffffffb8, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
REGFILE_SP.REGFILE_SP                                                            = c_bits(REGFILE_SP, 0, 31, 0xffffffff, 32, "", "")



DOLOOP_CACHE_CONFIG                                                              = c_reg(0xffff8200, 1, 1, 0, "", 2, 3, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DOLOOP_CACHE_CONFIG.DOLOOP_CACHE_CONFIG_DOLOOP_EN                                = c_bits(DOLOOP_CACHE_CONFIG, 0, 0, 0x1, 1, "", "")
DOLOOP_CACHE_CONFIG.DOLOOP_CACHE_CONFIG_COUNTERS_EN                              = c_bits(DOLOOP_CACHE_CONFIG, 1, 1, 0x2, 1, "", "")
DOLOOP_CACHE_FILL_COUNT                                                          = c_reg(0xffff8208, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DOLOOP_CACHE_FILL_COUNT.DOLOOP_CACHE_FILL_COUNT                                  = c_bits(DOLOOP_CACHE_FILL_COUNT, 0, 31, 0xffffffff, 32, "", "")
DOLOOP_CACHE_HIT_COUNT                                                           = c_reg(0xffff8204, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
DOLOOP_CACHE_HIT_COUNT.DOLOOP_CACHE_HIT_COUNT                                    = c_bits(DOLOOP_CACHE_HIT_COUNT, 0, 31, 0xffffffff, 32, "", "")



INT_ACK                                                                          = c_reg(0xffff8114, 1, 1, 0, "", 1, 0, 1, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_ACK.INT_ACK                                                                  = c_bits(INT_ACK, 0, 0, 0x1, 1, "", "")
INT_ADDR                                                                         = c_reg(0xffff8108, 1, 1, 0, "", 32, 8, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_ADDR.INT_ADDR                                                                = c_bits(INT_ADDR, 0, 31, 0xffffffff, 32, "", "")
INT_BLOCK_PRIORITY                                                               = c_reg(0xffff813c, 1, 1, 0, "", 2, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_BLOCK_PRIORITY.INT_BLOCK_PRIORITY                                            = c_bits(INT_BLOCK_PRIORITY, 0, 1, 0x3, 2, "", "")
INT_CLK_SWITCH_EN                                                                = c_reg(0xffff810c, 1, 1, 0, "", 1, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_CLK_SWITCH_EN.INT_CLK_SWITCH_EN                                              = c_bits(INT_CLK_SWITCH_EN, 0, 0, 0x1, 1, "", "")
INT_CLOCK_DIVIDE_RATE                                                            = c_reg(0xffff8110, 1, 1, 0, "", 2, 1, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_CLOCK_DIVIDE_RATE.K32_INTERRUPT__CLOCK_STOPPED                               = c_enum(INT_CLOCK_DIVIDE_RATE, 0, "", "")
INT_CLOCK_DIVIDE_RATE.K32_INTERRUPT__CLOCK_RATE_MAX                              = c_enum(INT_CLOCK_DIVIDE_RATE, 1, "", "")
INT_CLOCK_DIVIDE_RATE.K32_INTERRUPT__CLOCK_RATE_HALF                             = c_enum(INT_CLOCK_DIVIDE_RATE, 2, "", "")
INT_CLOCK_DIVIDE_RATE.K32_INTERRUPT__CLOCK_RATE_RESERVED                         = c_enum(INT_CLOCK_DIVIDE_RATE, 3, "", "")
INT_GBL_ENABLE                                                                   = c_reg(0xffff8100, 1, 1, 0, "", 1, 0, 1, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_GBL_ENABLE.INT_GBL_ENABLE                                                    = c_bits(INT_GBL_ENABLE, 0, 0, 0x1, 1, "", "")
INT_LOAD_INFO                                                                    = c_reg(0xffff8128, 1, 1, 0, "", 20, 0, 1, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_LOAD_INFO.INT_LOAD_INFO_PRIORITY                                             = c_bits(INT_LOAD_INFO, 0, 1, 0x3, 2, "", "")
INT_LOAD_INFO.INT_LOAD_INFO_SOURCE                                               = c_bits(INT_LOAD_INFO, 2, 6, 0x7c, 5, "", "")
INT_LOAD_INFO.INT_LOAD_INFO_UNUSED7                                              = c_bits(INT_LOAD_INFO, 7, 9, 0x380, 3, "", "")
INT_LOAD_INFO.INT_LOAD_INFO_INT_ACTIVE                                           = c_bits(INT_LOAD_INFO, 10, 10, 0x400, 1, "", "")
INT_LOAD_INFO.INT_LOAD_INFO_REQUEST                                              = c_bits(INT_LOAD_INFO, 11, 15, 0xf800, 5, "", "")
INT_LOAD_INFO.INT_LOAD_INFO_UNUSED16                                             = c_bits(INT_LOAD_INFO, 16, 18, 0x70000, 3, "", "")
INT_LOAD_INFO.INT_LOAD_INFO_DONT_CLEAR                                           = c_bits(INT_LOAD_INFO, 19, 19, 0x80000, 1, "", "")
INT_PRIORITY                                                                     = c_reg(0xffff8124, 1, 1, 0, "", 2, 0, 1, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_PRIORITY.INT_PRIORITY                                                        = c_bits(INT_PRIORITY, 0, 1, 0x3, 2, "", "")
INT_SAVE_INFO                                                                    = c_reg(0xffff812c, 1, 0, 0, "", 22, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_SAVE_INFO.INT_SAVE_INFO_PRIORITY                                             = c_bits(INT_SAVE_INFO, 0, 1, 0x3, 2, "", "")
INT_SAVE_INFO.INT_SAVE_INFO_SOURCE                                               = c_bits(INT_SAVE_INFO, 2, 6, 0x7c, 5, "", "")
INT_SAVE_INFO.INT_SAVE_INFO_UNUSED7                                              = c_bits(INT_SAVE_INFO, 7, 9, 0x380, 3, "", "")
INT_SAVE_INFO.INT_SAVE_INFO_ACTIVE                                               = c_bits(INT_SAVE_INFO, 10, 10, 0x400, 1, "", "")
INT_SAVE_INFO.INT_SAVE_INFO_SOURCE_NEW                                           = c_bits(INT_SAVE_INFO, 11, 15, 0xf800, 5, "", "")
INT_SAVE_INFO.INT_SAVE_INFO_UNUSED16                                             = c_bits(INT_SAVE_INFO, 16, 18, 0x70000, 3, "", "")
INT_SAVE_INFO.INT_SAVE_INFO_UNUSED19                                             = c_bits(INT_SAVE_INFO, 19, 19, 0x80000, 1, "", "")
INT_SAVE_INFO.INT_SAVE_INFO_PRIORITY_NEW                                         = c_bits(INT_SAVE_INFO, 20, 21, 0x300000, 2, "", "")
INT_SELECT                                                                       = c_reg(0xffff8120, 1, 1, 0, "", 5, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_SELECT.INT_SELECT                                                            = c_bits(INT_SELECT, 0, 4, 0x1f, 5, "", "")
INT_SOURCE                                                                       = c_reg(0xffff8130, 1, 0, 0, "", 5, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_SOURCE.INT_SOURCE                                                            = c_bits(INT_SOURCE, 0, 4, 0x1f, 5, "", "")
INT_SOURCES_EN                                                                   = c_reg(0xffff8138, 1, 1, 0, "", 32, 0, 1, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_SOURCES_EN.INT_SOURCE_TBUS_INT_ADPTR_EVENT                                   = c_bits(INT_SOURCES_EN, 5, 5, 0x20, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_TBUS_MSG_ADPTR_EVENT                                   = c_bits(INT_SOURCES_EN, 6, 6, 0x40, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_OUTBOUND_ACCESS_ERROR_EVENT                            = c_bits(INT_SOURCES_EN, 7, 7, 0x80, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_TIME_UPDATE_EVENT                                      = c_bits(INT_SOURCES_EN, 8, 8, 0x100, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_VML_EVENT                                              = c_bits(INT_SOURCES_EN, 11, 11, 0x800, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_DMAC_QUEUE0_EVENT                                      = c_bits(INT_SOURCES_EN, 12, 12, 0x1000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_DMAC_QUEUE1_EVENT                                      = c_bits(INT_SOURCES_EN, 13, 13, 0x2000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_SQIF_ARBITER_EVENT                                     = c_bits(INT_SOURCES_EN, 15, 15, 0x8000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_SQIF_ARBITER1_EVENT                                    = c_bits(INT_SOURCES_EN, 16, 16, 0x10000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_CPU1_ACCESS_FAULT_EVENT                                = c_bits(INT_SOURCES_EN, 18, 18, 0x40000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_INTERPROC_EVENT_1                                      = c_bits(INT_SOURCES_EN, 21, 21, 0x200000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_INTERPROC_EVENT_2                                      = c_bits(INT_SOURCES_EN, 22, 22, 0x400000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_PIO_INT_EVENT_1                                        = c_bits(INT_SOURCES_EN, 23, 23, 0x800000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_PIO_INT_EVENT_2                                        = c_bits(INT_SOURCES_EN, 24, 24, 0x1000000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_PIO_TIMER_EVENT_3                                      = c_bits(INT_SOURCES_EN, 25, 25, 0x2000000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_CPU1_EXCEPTION                                         = c_bits(INT_SOURCES_EN, 26, 26, 0x4000000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_LAST                                                   = c_bits(INT_SOURCES_EN, 26, 26, 0x4000000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_SDIO_HOST_INTERRUPT_EVENT                              = c_bits(INT_SOURCES_EN, 19, 19, 0x80000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_SDIO_HOST_WAKEUP_EVENT                                 = c_bits(INT_SOURCES_EN, 20, 20, 0x100000, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_TIMER1                                                 = c_bits(INT_SOURCES_EN, 0, 0, 0x1, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_TIMER2                                                 = c_bits(INT_SOURCES_EN, 1, 1, 0x2, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_SW_ERROR                                               = c_bits(INT_SOURCES_EN, 2, 2, 0x4, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_SW0                                                    = c_bits(INT_SOURCES_EN, 3, 3, 0x8, 1, "", "")
INT_SOURCES_EN.INT_SOURCE_SW1                                                    = c_bits(INT_SOURCES_EN, 4, 4, 0x10, 1, "", "")
INT_STATUS                                                                       = c_reg(0xffff8134, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_STATUS.INT_SOURCE_TBUS_INT_ADPTR_EVENT                                       = c_bits(INT_STATUS, 5, 5, 0x20, 1, "", "")
INT_STATUS.INT_SOURCE_TBUS_MSG_ADPTR_EVENT                                       = c_bits(INT_STATUS, 6, 6, 0x40, 1, "", "")
INT_STATUS.INT_SOURCE_OUTBOUND_ACCESS_ERROR_EVENT                                = c_bits(INT_STATUS, 7, 7, 0x80, 1, "", "")
INT_STATUS.INT_SOURCE_TIME_UPDATE_EVENT                                          = c_bits(INT_STATUS, 8, 8, 0x100, 1, "", "")
INT_STATUS.INT_SOURCE_VML_EVENT                                                  = c_bits(INT_STATUS, 11, 11, 0x800, 1, "", "")
INT_STATUS.INT_SOURCE_DMAC_QUEUE0_EVENT                                          = c_bits(INT_STATUS, 12, 12, 0x1000, 1, "", "")
INT_STATUS.INT_SOURCE_DMAC_QUEUE1_EVENT                                          = c_bits(INT_STATUS, 13, 13, 0x2000, 1, "", "")
INT_STATUS.INT_SOURCE_SQIF_ARBITER_EVENT                                         = c_bits(INT_STATUS, 15, 15, 0x8000, 1, "", "")
INT_STATUS.INT_SOURCE_SQIF_ARBITER1_EVENT                                        = c_bits(INT_STATUS, 16, 16, 0x10000, 1, "", "")
INT_STATUS.INT_SOURCE_CPU1_ACCESS_FAULT_EVENT                                    = c_bits(INT_STATUS, 18, 18, 0x40000, 1, "", "")
INT_STATUS.INT_SOURCE_INTERPROC_EVENT_1                                          = c_bits(INT_STATUS, 21, 21, 0x200000, 1, "", "")
INT_STATUS.INT_SOURCE_INTERPROC_EVENT_2                                          = c_bits(INT_STATUS, 22, 22, 0x400000, 1, "", "")
INT_STATUS.INT_SOURCE_PIO_INT_EVENT_1                                            = c_bits(INT_STATUS, 23, 23, 0x800000, 1, "", "")
INT_STATUS.INT_SOURCE_PIO_INT_EVENT_2                                            = c_bits(INT_STATUS, 24, 24, 0x1000000, 1, "", "")
INT_STATUS.INT_SOURCE_PIO_TIMER_EVENT_3                                          = c_bits(INT_STATUS, 25, 25, 0x2000000, 1, "", "")
INT_STATUS.INT_SOURCE_CPU1_EXCEPTION                                             = c_bits(INT_STATUS, 26, 26, 0x4000000, 1, "", "")
INT_STATUS.INT_SOURCE_LAST                                                       = c_bits(INT_STATUS, 26, 26, 0x4000000, 1, "", "")
INT_STATUS.INT_SOURCE_SDIO_HOST_INTERRUPT_EVENT                                  = c_bits(INT_STATUS, 19, 19, 0x80000, 1, "", "")
INT_STATUS.INT_SOURCE_SDIO_HOST_WAKEUP_EVENT                                     = c_bits(INT_STATUS, 20, 20, 0x100000, 1, "", "")
INT_STATUS.INT_SOURCE_TIMER1                                                     = c_bits(INT_STATUS, 0, 0, 0x1, 1, "", "")
INT_STATUS.INT_SOURCE_TIMER2                                                     = c_bits(INT_STATUS, 1, 1, 0x2, 1, "", "")
INT_STATUS.INT_SOURCE_SW_ERROR                                                   = c_bits(INT_STATUS, 2, 2, 0x4, 1, "", "")
INT_STATUS.INT_SOURCE_SW0                                                        = c_bits(INT_STATUS, 3, 3, 0x8, 1, "", "")
INT_STATUS.INT_SOURCE_SW1                                                        = c_bits(INT_STATUS, 4, 4, 0x10, 1, "", "")
INT_SW0_EVENT                                                                    = c_reg(0xffff8118, 1, 1, 0, "", 1, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_SW0_EVENT.INT_SW0_EVENT                                                      = c_bits(INT_SW0_EVENT, 0, 0, 0x1, 1, "", "")
INT_SW1_EVENT                                                                    = c_reg(0xffff811c, 1, 1, 0, "", 1, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_SW1_EVENT.INT_SW1_EVENT                                                      = c_bits(INT_SW1_EVENT, 0, 0, 0x1, 1, "", "")
INT_UNBLOCK                                                                      = c_reg(0xffff8104, 1, 1, 0, "", 1, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
INT_UNBLOCK.INT_UNBLOCK                                                          = c_bits(INT_UNBLOCK, 0, 0, 0x1, 1, "", "")
INT_SOURCE_TBUS_INT_ADPTR_EVENT                                                  = c_enum(None, 5, "", "")
INT_SOURCE_TBUS_MSG_ADPTR_EVENT                                                  = c_enum(None, 6, "", "")
INT_SOURCE_OUTBOUND_ACCESS_ERROR_EVENT                                           = c_enum(None, 7, "", "")
INT_SOURCE_TIME_UPDATE_EVENT                                                     = c_enum(None, 8, "", "")
INT_SOURCE_VML_EVENT                                                             = c_enum(None, 11, "", "")
INT_SOURCE_DMAC_QUEUE0_EVENT                                                     = c_enum(None, 12, "", "")
INT_SOURCE_DMAC_QUEUE1_EVENT                                                     = c_enum(None, 13, "", "")
INT_SOURCE_SQIF_ARBITER_EVENT                                                    = c_enum(None, 15, "", "")
INT_SOURCE_SQIF_ARBITER1_EVENT                                                   = c_enum(None, 16, "", "")
INT_SOURCE_CPU1_ACCESS_FAULT_EVENT                                               = c_enum(None, 18, "", "")
INT_SOURCE_INTERPROC_EVENT_1                                                     = c_enum(None, 21, "", "")
INT_SOURCE_INTERPROC_EVENT_2                                                     = c_enum(None, 22, "", "")
INT_SOURCE_PIO_INT_EVENT_1                                                       = c_enum(None, 23, "", "")
INT_SOURCE_PIO_INT_EVENT_2                                                       = c_enum(None, 24, "", "")
INT_SOURCE_PIO_TIMER_EVENT_3                                                     = c_enum(None, 25, "", "")
INT_SOURCE_CPU1_EXCEPTION                                                        = c_enum(None, 26, "", "")
INT_SOURCE_LAST                                                                  = c_enum(None, 26, "", "")
INT_SOURCE_SDIO_HOST_INTERRUPT_EVENT                                             = c_enum(None, 19, "", "")
INT_SOURCE_SDIO_HOST_WAKEUP_EVENT                                                = c_enum(None, 20, "", "")
INT_SOURCE_TIMER1                                                                = c_enum(None, 0, "", "")
INT_SOURCE_TIMER2                                                                = c_enum(None, 1, "", "")
INT_SOURCE_SW_ERROR                                                              = c_enum(None, 2, "", "")
INT_SOURCE_SW0                                                                   = c_enum(None, 3, "", "")
INT_SOURCE_SW1                                                                   = c_enum(None, 4, "", "")



CLOCK_CONT_SHALLOW_SLEEP_RATE                                                    = c_reg(0xffff80a8, 1, 1, 0, "", 8, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
CLOCK_CONT_SHALLOW_SLEEP_RATE.CLOCK_CONT_SHALLOW_SLEEP_RATE                      = c_bits(CLOCK_CONT_SHALLOW_SLEEP_RATE, 0, 7, 0xff, 8, "", "")
CLOCK_DIVIDE_RATE                                                                = c_reg(0xffff8080, 1, 1, 0, "", 2, 1, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
CLOCK_DIVIDE_RATE.CLOCK_STOPPED                                                  = c_enum(CLOCK_DIVIDE_RATE, 0, "", "")
CLOCK_DIVIDE_RATE.CLOCK_RATE_MAX                                                 = c_enum(CLOCK_DIVIDE_RATE, 1, "", "")
CLOCK_DIVIDE_RATE.CLOCK_RATE_HALF                                                = c_enum(CLOCK_DIVIDE_RATE, 2, "", "")
CLOCK_DIVIDE_RATE.CLOCK_RATE_RESERVED                                            = c_enum(CLOCK_DIVIDE_RATE, 3, "", "")
CLOCK_STOP_WIND_DOWN_SEQUENCE_EN                                                 = c_reg(0xffff8094, 1, 1, 0, "", 1, 1, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
CLOCK_STOP_WIND_DOWN_SEQUENCE_EN.CLOCK_STOP_WIND_DOWN_SEQUENCE_EN                = c_bits(CLOCK_STOP_WIND_DOWN_SEQUENCE_EN, 0, 0, 0x1, 1, "", "")
CLOCK_STOPPED                                                                    = c_enum(None, 0, "", "")
CLOCK_RATE_MAX                                                                   = c_enum(None, 1, "", "")
CLOCK_RATE_HALF                                                                  = c_enum(None, 2, "", "")
CLOCK_RATE_RESERVED                                                              = c_enum(None, 3, "", "")









TIMER1_EN                                                                        = c_reg(0xffff8184, 1, 1, 0, "", 1, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
TIMER1_EN.TIMER1_EN                                                              = c_bits(TIMER1_EN, 0, 0, 0x1, 1, "", "")
TIMER1_TRIGGER                                                                   = c_reg(0xffff818c, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
TIMER1_TRIGGER.TIMER1_TRIGGER                                                    = c_bits(TIMER1_TRIGGER, 0, 31, 0xffffffff, 32, "", "")
TIMER2_EN                                                                        = c_reg(0xffff8188, 1, 1, 0, "", 1, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
TIMER2_EN.TIMER2_EN                                                              = c_bits(TIMER2_EN, 0, 0, 0x1, 1, "", "")
TIMER2_TRIGGER                                                                   = c_reg(0xffff8190, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
TIMER2_TRIGGER.TIMER2_TRIGGER                                                    = c_bits(TIMER2_TRIGGER, 0, 31, 0xffffffff, 32, "", "")
TIMER_TIME                                                                       = c_reg(0xffff8180, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
TIMER_TIME.TIMER_TIME                                                            = c_bits(TIMER_TIME, 0, 31, 0xffffffff, 32, "", "")















KALIMBA_READ_CACHE_ACCESS_CTRL                                                   = c_reg(0xffffa050, 1, 1, 0, "", 4, 15, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P0_ACCESS_PERMISSION          = c_bits(KALIMBA_READ_CACHE_ACCESS_CTRL, 0, 0, 0x1, 1, "", "")
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P0_ACCESS_PERMISSION.KALIMBA_READ_CACHE__P0_ACCESS_BLOCKED = c_value(KALIMBA_READ_CACHE_ACCESS_CTRL, "", 0, "")
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P0_ACCESS_PERMISSION.KALIMBA_READ_CACHE__P0_ACCESS_UNBLOCKED = c_value(KALIMBA_READ_CACHE_ACCESS_CTRL, "", 1, "")
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P1_ACCESS_PERMISSION          = c_bits(KALIMBA_READ_CACHE_ACCESS_CTRL, 1, 1, 0x2, 1, "", "")
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P1_ACCESS_PERMISSION.KALIMBA_READ_CACHE__P1_ACCESS_BLOCKED = c_value(KALIMBA_READ_CACHE_ACCESS_CTRL, "", 0, "")
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P1_ACCESS_PERMISSION.KALIMBA_READ_CACHE__P1_ACCESS_UNBLOCKED = c_value(KALIMBA_READ_CACHE_ACCESS_CTRL, "", 1, "")
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P2_ACCESS_PERMISSION          = c_bits(KALIMBA_READ_CACHE_ACCESS_CTRL, 2, 2, 0x4, 1, "", "")
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P2_ACCESS_PERMISSION.KALIMBA_READ_CACHE__P2_ACCESS_BLOCKED = c_value(KALIMBA_READ_CACHE_ACCESS_CTRL, "", 0, "")
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P2_ACCESS_PERMISSION.KALIMBA_READ_CACHE__P2_ACCESS_UNBLOCKED = c_value(KALIMBA_READ_CACHE_ACCESS_CTRL, "", 1, "")
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P3_ACCESS_PERMISSION          = c_bits(KALIMBA_READ_CACHE_ACCESS_CTRL, 3, 3, 0x8, 1, "", "")
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P3_ACCESS_PERMISSION.KALIMBA_READ_CACHE__P3_ACCESS_BLOCKED = c_value(KALIMBA_READ_CACHE_ACCESS_CTRL, "", 0, "")
KALIMBA_READ_CACHE_ACCESS_CTRL.KALIMBA_READ_CACHE__P3_ACCESS_PERMISSION.KALIMBA_READ_CACHE__P3_ACCESS_UNBLOCKED = c_value(KALIMBA_READ_CACHE_ACCESS_CTRL, "", 1, "")
KALIMBA_READ_CACHE_ARBITRATION_WAIT_COUNTER_DM                                   = c_reg(0xffffa060, 1, 0, 0, "", 24, 0, 0, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_ARBITRATION_WAIT_COUNTER_DM.KALIMBA_READ_CACHE_ARBITRATION_WAIT_COUNTER_DM = c_bits(KALIMBA_READ_CACHE_ARBITRATION_WAIT_COUNTER_DM, 0, 23, 0xffffff, 24, "", "")
KALIMBA_READ_CACHE_ARBITRATION_WAIT_COUNTER_PM                                   = c_reg(0xffffa064, 1, 0, 0, "", 24, 0, 0, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_ARBITRATION_WAIT_COUNTER_PM.KALIMBA_READ_CACHE_ARBITRATION_WAIT_COUNTER_PM = c_bits(KALIMBA_READ_CACHE_ARBITRATION_WAIT_COUNTER_PM, 0, 23, 0xffffff, 24, "", "")
KALIMBA_READ_CACHE_CONTROL                                                       = c_reg(0xffffa000, 1, 1, 0, "", 7, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_CONTROL.KALIMBA_READ_CACHE_CONTROL_MODE                       = c_bits(KALIMBA_READ_CACHE_CONTROL, 0, 1, 0x3, 2, "", "")
KALIMBA_READ_CACHE_CONTROL.KALIMBA_READ_CACHE_CONTROL_MODE.KALIMBA_READ_CACHE_MODE_DISABLED = c_value(KALIMBA_READ_CACHE_CONTROL, "", 0, "")
KALIMBA_READ_CACHE_CONTROL.KALIMBA_READ_CACHE_CONTROL_MODE.KALIMBA_READ_CACHE_MODE_2WAY = c_value(KALIMBA_READ_CACHE_CONTROL, "", 1, "")
KALIMBA_READ_CACHE_CONTROL.KALIMBA_READ_CACHE_CONTROL_MODE.KALIMBA_READ_CACHE_MODE_2WAYHALF = c_value(KALIMBA_READ_CACHE_CONTROL, "", 2, "")
KALIMBA_READ_CACHE_CONTROL.KALIMBA_READ_CACHE_CONTROL_MODE.KALIMBA_READ_CACHE_MODE_DIRECT = c_value(KALIMBA_READ_CACHE_CONTROL, "", 3, "")
KALIMBA_READ_CACHE_CONTROL.KALIMBA_READ_CACHE_CONTROL_ENABLE_PM_COUNTERS         = c_bits(KALIMBA_READ_CACHE_CONTROL, 2, 2, 0x4, 1, "", "")
KALIMBA_READ_CACHE_CONTROL.KALIMBA_READ_CACHE_CONTROL_ENABLE_DM_COUNTERS         = c_bits(KALIMBA_READ_CACHE_CONTROL, 3, 3, 0x8, 1, "", "")
KALIMBA_READ_CACHE_CONTROL.KALIMBA_READ_CACHE_CONTROL_ENABLE_SLAVE_COUNTERS      = c_bits(KALIMBA_READ_CACHE_CONTROL, 4, 4, 0x10, 1, "", "")
KALIMBA_READ_CACHE_CONTROL.KALIMBA_READ_CACHE_CONTROL_ENABLE_BUFFER_IN_BYPASS    = c_bits(KALIMBA_READ_CACHE_CONTROL, 5, 5, 0x20, 1, "", "")
KALIMBA_READ_CACHE_CONTROL.KALIMBA_READ_CACHE_CONTROL_ENABLE_MASTER_COUNTERS     = c_bits(KALIMBA_READ_CACHE_CONTROL, 6, 6, 0x40, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA                                                    = c_reg(0xffffa048, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_REQUEST_MODE                    = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 0, 1, 0x3, 2, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_REQUEST_MODE.KALIMBA_READ_CACHE_REQ_FREE = c_value(KALIMBA_READ_CACHE_DEBUG_DATA, "", 0, "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_REQUEST_MODE.KALIMBA_READ_CACHE_REQ_ILEGAL = c_value(KALIMBA_READ_CACHE_DEBUG_DATA, "", 1, "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_REQUEST_MODE.KALIMBA_READ_CACHE_REQ_DM_LOCK = c_value(KALIMBA_READ_CACHE_DEBUG_DATA, "", 2, "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_REQUEST_MODE.KALIMBA_READ_CACHE_REQ_PM_LOCK = c_value(KALIMBA_READ_CACHE_DEBUG_DATA, "", 3, "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_DUMMY0                          = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 2, 3, 0xc, 2, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_IS_STUCK                        = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 4, 4, 0x10, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_FSM_NOT_BUSY                    = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 5, 5, 0x20, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_REQ_CANCELED                    = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 6, 6, 0x40, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_DUMMY1                          = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 7, 7, 0x80, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_PM_REQ_STATE                    = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 8, 9, 0x300, 2, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_DM_REQ_STATE                    = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 10, 11, 0xc00, 2, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_DUMMY2                          = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 12, 15, 0xf000, 4, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_FETCH_STATE                     = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 16, 16, 0x10000, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_FETCH_STATE.KALIMBA_READ_CACHE_FETCH_IDLE = c_value(KALIMBA_READ_CACHE_DEBUG_DATA, "", 0, "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_FETCH_STATE.KALIMBA_READ_CACHE_FETCH_FETCH = c_value(KALIMBA_READ_CACHE_DEBUG_DATA, "", 1, "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_FILL_STATE                      = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 17, 17, 0x20000, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_FILL_STATE.KALIMBA_READ_CACHE_FILL_IDLE = c_value(KALIMBA_READ_CACHE_DEBUG_DATA, "", 0, "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_FILL_STATE.KALIMBA_READ_CACHE_FILL_FILL = c_value(KALIMBA_READ_CACHE_DEBUG_DATA, "", 1, "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_FETCH_ID                        = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 18, 18, 0x40000, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_FILL_ID                         = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 19, 19, 0x80000, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_BUFF_REQ_CNTR                   = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 20, 21, 0x300000, 2, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_BUFF_SAMPLE_CNTR                = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 22, 23, 0xc00000, 2, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.REQ_ID_OUT                                         = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 24, 24, 0x1000000, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.REQ_RD_EN_OUT                                      = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 25, 25, 0x2000000, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.REQ_HIT                                            = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 26, 26, 0x4000000, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.REQ_MISS                                           = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 27, 27, 0x8000000, 1, "", "")
KALIMBA_READ_CACHE_DEBUG_DATA.KALIMBA_READ_CACHE_DUMMY3                          = c_bits(KALIMBA_READ_CACHE_DEBUG_DATA, 28, 31, 0xf0000000, 4, "", "")
KALIMBA_READ_CACHE_DEBUG_EN                                                      = c_reg(0xffffa044, 0, 1, 0, "", 1, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_DEBUG_EN.KALIMBA_READ_CACHE_DEBUG_EN                          = c_bits(KALIMBA_READ_CACHE_DEBUG_EN, 0, 0, 0x1, 1, "", "")
KALIMBA_READ_CACHE_DM_CONFIG                                                     = c_reg(0xffffa008, 1, 1, 0, "", 3, 1, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_DM_CONFIG.KALIMBA_READ_CACHE_DM_CONFIG_PM_ABORT               = c_bits(KALIMBA_READ_CACHE_DM_CONFIG, 0, 0, 0x1, 1, "", "")
KALIMBA_READ_CACHE_DM_CONFIG.KALIMBA_READ_CACHE_DM_CONFIG_DM_ABORT               = c_bits(KALIMBA_READ_CACHE_DM_CONFIG, 1, 1, 0x2, 1, "", "")
KALIMBA_READ_CACHE_DM_CONFIG.KALIMBA_READ_CACHE_DM_CONFIG_IDLE_ABORT             = c_bits(KALIMBA_READ_CACHE_DM_CONFIG, 2, 2, 0x4, 1, "", "")
KALIMBA_READ_CACHE_DM_HIT_COUNTER                                                = c_reg(0xffffa014, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_DM_HIT_COUNTER.KALIMBA_READ_CACHE_DM_HIT_COUNTER              = c_bits(KALIMBA_READ_CACHE_DM_HIT_COUNTER, 0, 31, 0xffffffff, 32, "", "")
KALIMBA_READ_CACHE_DM_MISS_COUNTER                                               = c_reg(0xffffa018, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_DM_MISS_COUNTER.KALIMBA_READ_CACHE_DM_MISS_COUNTER            = c_bits(KALIMBA_READ_CACHE_DM_MISS_COUNTER, 0, 31, 0xffffffff, 32, "", "")
KALIMBA_READ_CACHE_FSM_WAIT_COUNTER_DM                                           = c_reg(0xffffa070, 1, 0, 0, "", 24, 0, 0, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_FSM_WAIT_COUNTER_DM.KALIMBA_READ_CACHE_FSM_WAIT_COUNTER_DM    = c_bits(KALIMBA_READ_CACHE_FSM_WAIT_COUNTER_DM, 0, 23, 0xffffff, 24, "", "")
KALIMBA_READ_CACHE_FSM_WAIT_COUNTER_PM                                           = c_reg(0xffffa074, 1, 0, 0, "", 24, 0, 0, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_FSM_WAIT_COUNTER_PM.KALIMBA_READ_CACHE_FSM_WAIT_COUNTER_PM    = c_bits(KALIMBA_READ_CACHE_FSM_WAIT_COUNTER_PM, 0, 23, 0xffffff, 24, "", "")
KALIMBA_READ_CACHE_INVALIDATE_CONTROL                                            = c_reg(0xffffa020, 1, 1, 0, "", 2, 0, 1, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_INVALIDATE_CONTROL.KALIMBA_READ_CACHE_IVALIDATE_ILEGAL_VALUE  = c_enum(KALIMBA_READ_CACHE_INVALIDATE_CONTROL, 0, "", "")
KALIMBA_READ_CACHE_INVALIDATE_CONTROL.KALIMBA_READ_CACHE_INVALIDATE_2WAY_TAG_RAMS = c_enum(KALIMBA_READ_CACHE_INVALIDATE_CONTROL, 1, "", "")
KALIMBA_READ_CACHE_INVALIDATE_CONTROL.KALIMBA_READ_CACHE_INVALIDATE_2WAY_HALF_TAG_RAMS = c_enum(KALIMBA_READ_CACHE_INVALIDATE_CONTROL, 2, "", "")
KALIMBA_READ_CACHE_INVALIDATE_CONTROL.KALIMBA_READ_CACHE_INVALIDATE_DIRECT_TAG_FLOPS = c_enum(KALIMBA_READ_CACHE_INVALIDATE_CONTROL, 3, "", "")
KALIMBA_READ_CACHE_INVALIDATE_NUM_LINES                                          = c_reg(0xffffa028, 1, 1, 0, "", 16, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_INVALIDATE_NUM_LINES.KALIMBA_READ_CACHE_INVALIDATE_NUM_LINES  = c_bits(KALIMBA_READ_CACHE_INVALIDATE_NUM_LINES, 0, 15, 0xffff, 16, "", "")
KALIMBA_READ_CACHE_INVALIDATE_START_LINE                                         = c_reg(0xffffa024, 1, 1, 0, "", 16, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_INVALIDATE_START_LINE.KALIMBA_READ_CACHE_INVALIDATE_START_LINE = c_bits(KALIMBA_READ_CACHE_INVALIDATE_START_LINE, 0, 15, 0xffff, 16, "", "")
KALIMBA_READ_CACHE_MISS_LOG_BASE_ADDR                                            = c_reg(0xffffa030, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_MISS_LOG_BASE_ADDR.KALIMBA_READ_CACHE_MISS_LOG_BASE_ADDR      = c_bits(KALIMBA_READ_CACHE_MISS_LOG_BASE_ADDR, 0, 31, 0xffffffff, 32, "", "")
KALIMBA_READ_CACHE_MISS_LOG_ENABLE                                               = c_reg(0xffffa02c, 1, 1, 0, "", 1, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_MISS_LOG_ENABLE.KALIMBA_READ_CACHE_MISS_LOG_ENABLE            = c_bits(KALIMBA_READ_CACHE_MISS_LOG_ENABLE, 0, 0, 0x1, 1, "", "")
KALIMBA_READ_CACHE_MISS_LOG_INDEX                                                = c_reg(0xffffa038, 1, 1, 0, "", 16, 0, 1, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_MISS_LOG_INDEX.KALIMBA_READ_CACHE_MISS_LOG_INDEX              = c_bits(KALIMBA_READ_CACHE_MISS_LOG_INDEX, 0, 15, 0xffff, 16, "", "")
KALIMBA_READ_CACHE_MISS_LOG_SIZE                                                 = c_reg(0xffffa034, 1, 1, 0, "", 16, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_MISS_LOG_SIZE.KALIMBA_READ_CACHE_MISS_LOG_SIZE                = c_bits(KALIMBA_READ_CACHE_MISS_LOG_SIZE, 0, 15, 0xffff, 16, "", "")
KALIMBA_READ_CACHE_MUTEX_LOCK                                                    = c_reg(0xffffa04c, 1, 1, 0, "", 4, 15, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_MUTEX_LOCK.KALIMBA_READ_CACHE__MUTEX_AVAILABLE                = c_enum(KALIMBA_READ_CACHE_MUTEX_LOCK, 0, "", "")
KALIMBA_READ_CACHE_MUTEX_LOCK.KALIMBA_READ_CACHE__MUTEX_CLAIMED_BY_P0            = c_enum(KALIMBA_READ_CACHE_MUTEX_LOCK, 1, "", "")
KALIMBA_READ_CACHE_MUTEX_LOCK.KALIMBA_READ_CACHE__MUTEX_CLAIMED_BY_P1            = c_enum(KALIMBA_READ_CACHE_MUTEX_LOCK, 2, "", "")
KALIMBA_READ_CACHE_MUTEX_LOCK.KALIMBA_READ_CACHE__MUTEX_CLAIMED_BY_P2            = c_enum(KALIMBA_READ_CACHE_MUTEX_LOCK, 4, "", "")
KALIMBA_READ_CACHE_MUTEX_LOCK.KALIMBA_READ_CACHE__MUTEX_CLAIMED_BY_P3            = c_enum(KALIMBA_READ_CACHE_MUTEX_LOCK, 8, "", "")
KALIMBA_READ_CACHE_MUTEX_LOCK.KALIMBA_READ_CACHE__MUTEX_DISABLED                 = c_enum(KALIMBA_READ_CACHE_MUTEX_LOCK, 15, "", "")
KALIMBA_READ_CACHE_NVMEM_WAIT_COUNTER_DM                                         = c_reg(0xffffa068, 1, 0, 0, "", 32, 0, 0, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_NVMEM_WAIT_COUNTER_DM.KALIMBA_READ_CACHE_NVMEM_WAIT_COUNTER_DM = c_bits(KALIMBA_READ_CACHE_NVMEM_WAIT_COUNTER_DM, 0, 31, 0xffffffff, 32, "", "")
KALIMBA_READ_CACHE_NVMEM_WAIT_COUNTER_PM                                         = c_reg(0xffffa06c, 1, 0, 0, "", 32, 0, 0, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_NVMEM_WAIT_COUNTER_PM.KALIMBA_READ_CACHE_NVMEM_WAIT_COUNTER_PM = c_bits(KALIMBA_READ_CACHE_NVMEM_WAIT_COUNTER_PM, 0, 31, 0xffffffff, 32, "", "")
KALIMBA_READ_CACHE_PARAMS                                                        = c_reg(0xffffa03c, 1, 0, 0, "", 32, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_PARAMS.KALIMBA_READ_CACHE_PARAMS_WORD_WIDTH                   = c_bits(KALIMBA_READ_CACHE_PARAMS, 0, 7, 0xff, 8, "", "")
KALIMBA_READ_CACHE_PARAMS.KALIMBA_READ_CACHE_PARAMS_DIRECT_LINE_LENGTH           = c_bits(KALIMBA_READ_CACHE_PARAMS, 8, 15, 0xff00, 8, "", "")
KALIMBA_READ_CACHE_PARAMS.KALIMBA_READ_CACHE_PARAMS_2WAY_LINE_LENGTH             = c_bits(KALIMBA_READ_CACHE_PARAMS, 16, 23, 0xff0000, 8, "", "")
KALIMBA_READ_CACHE_PARAMS.KALIMBA_READ_CACHE_PARAMS_EXTENT                       = c_bits(KALIMBA_READ_CACHE_PARAMS, 24, 31, 0xff000000, 8, "", "")
KALIMBA_READ_CACHE_PM_CONFIG                                                     = c_reg(0xffffa004, 1, 1, 0, "", 3, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_PM_CONFIG.KALIMBA_READ_CACHE_PM_CONFIG_PM_ABORT               = c_bits(KALIMBA_READ_CACHE_PM_CONFIG, 0, 0, 0x1, 1, "", "")
KALIMBA_READ_CACHE_PM_CONFIG.KALIMBA_READ_CACHE_PM_CONFIG_DM_ABORT               = c_bits(KALIMBA_READ_CACHE_PM_CONFIG, 1, 1, 0x2, 1, "", "")
KALIMBA_READ_CACHE_PM_CONFIG.KALIMBA_READ_CACHE_PM_CONFIG_IDLE_ABORT             = c_bits(KALIMBA_READ_CACHE_PM_CONFIG, 2, 2, 0x4, 1, "", "")
KALIMBA_READ_CACHE_PM_HIT_COUNTER                                                = c_reg(0xffffa00c, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_PM_HIT_COUNTER.KALIMBA_READ_CACHE_PM_HIT_COUNTER              = c_bits(KALIMBA_READ_CACHE_PM_HIT_COUNTER, 0, 31, 0xffffffff, 32, "", "")
KALIMBA_READ_CACHE_PM_MISS_COUNTER                                               = c_reg(0xffffa010, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_PM_MISS_COUNTER.KALIMBA_READ_CACHE_PM_MISS_COUNTER            = c_bits(KALIMBA_READ_CACHE_PM_MISS_COUNTER, 0, 31, 0xffffffff, 32, "", "")
KALIMBA_READ_CACHE_SLAVE_WAIT_COUNTER                                            = c_reg(0xffffa01c, 1, 1, 0, "", 32, 0, 1, 1, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_SLAVE_WAIT_COUNTER.KALIMBA_READ_CACHE_SLAVE_WAIT_COUNTER      = c_bits(KALIMBA_READ_CACHE_SLAVE_WAIT_COUNTER, 0, 31, 0xffffffff, 32, "", "")
KALIMBA_READ_CACHE_SOFT_RESET                                                    = c_reg(0xffffa040, 0, 1, 0, "", 1, 0, 1, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_SOFT_RESET.KALIMBA_READ_CACHE_SOFT_RESET                      = c_bits(KALIMBA_READ_CACHE_SOFT_RESET, 0, 0, 0x1, 1, "", "")
KALIMBA_READ_CACHE_TRANSITION_STATUS                                             = c_reg(0xffffa054, 1, 0, 0, "", 4, 0, 0, 0, "", "", "", "", "", 1, 1, "", "", 0)
KALIMBA_READ_CACHE_TRANSITION_STATUS.KALIMBA_READ_CACHE_ACTUAL_CONTROL_MODE      = c_bits(KALIMBA_READ_CACHE_TRANSITION_STATUS, 0, 1, 0x3, 2, "", "")
KALIMBA_READ_CACHE_TRANSITION_STATUS.KALIMBA_READ_CACHE_PENDING_MODE_CHANE       = c_bits(KALIMBA_READ_CACHE_TRANSITION_STATUS, 2, 2, 0x4, 1, "", "")
KALIMBA_READ_CACHE_TRANSITION_STATUS.KALIMBA_READ_CACHE_PENDING_INVALDIATE       = c_bits(KALIMBA_READ_CACHE_TRANSITION_STATUS, 3, 3, 0x8, 1, "", "")
KALIMBA_READ_CACHE_PORT_ID_PM                                                    = c_enum(None, 0, "", "")
KALIMBA_READ_CACHE_PORT_ID_DM                                                    = c_enum(None, 1, "", "")
KALIMBA_READ_CACHE_REQ_STATE_IDLE                                                = c_enum(None, 0, "", "")
KALIMBA_READ_CACHE_REQ_STATE_STALL                                               = c_enum(None, 1, "", "")
KALIMBA_READ_CACHE_REQ_STATE_ON_PROGRESS                                         = c_enum(None, 2, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_WAY0_SLVB                                            = c_enum(None, 0, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_LRU                                                  = c_enum(None, 4, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_WAY0_TAG                                             = c_enum(None, 5, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_WAY1_SLVB                                            = c_enum(None, 16, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_WAY1_RESERVED                                        = c_enum(None, 20, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_WAY1_TAG                                             = c_enum(None, 21, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_LOCKABLE_WAY0_SLVB                                   = c_enum(None, 0, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_LOCKABLE_WAY0_LOCKED                                 = c_enum(None, 4, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_LOCKABLE_WAY0_TAG                                    = c_enum(None, 5, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_LOCKABLE_WAY0_RESERVED                               = c_enum(None, 15, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_LOCKABLE_WAY1_SLVB                                   = c_enum(None, 16, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_LOCKABLE_WAY1_LOCKED                                 = c_enum(None, 20, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_LOCKABLE_WAY1_TAG                                    = c_enum(None, 21, "", "")
KALIMBA_READ_CACHE_TAG_2WAY_LOCKABLE_LRU                                         = c_enum(None, 31, "", "")
KALIMBA_READ_CACHE_TAG_DIRECT_SLVB                                               = c_enum(None, 0, "", "")
KALIMBA_READ_CACHE_TAG_DIRECT_TAG                                                = c_enum(None, 32, "", "")
KALIMBA_READ_CACHE__P0_ACCESS_PERMISSION                                         = c_enum(None, 0, "", "")
KALIMBA_READ_CACHE__P0_ACCESS_BLOCKED                                            = c_enum(None, 0, "", "")
KALIMBA_READ_CACHE__P0_ACCESS_UNBLOCKED                                          = c_enum(None, 1, "", "")
KALIMBA_READ_CACHE__P1_ACCESS_PERMISSION                                         = c_enum(None, 1, "", "")
KALIMBA_READ_CACHE__P1_ACCESS_BLOCKED                                            = c_enum(None, 0, "", "")
KALIMBA_READ_CACHE__P1_ACCESS_UNBLOCKED                                          = c_enum(None, 1, "", "")
KALIMBA_READ_CACHE__P2_ACCESS_PERMISSION                                         = c_enum(None, 2, "", "")
KALIMBA_READ_CACHE__P2_ACCESS_BLOCKED                                            = c_enum(None, 0, "", "")
KALIMBA_READ_CACHE__P2_ACCESS_UNBLOCKED                                          = c_enum(None, 1, "", "")
KALIMBA_READ_CACHE__P3_ACCESS_PERMISSION                                         = c_enum(None, 3, "", "")
KALIMBA_READ_CACHE__P3_ACCESS_BLOCKED                                            = c_enum(None, 0, "", "")
KALIMBA_READ_CACHE__P3_ACCESS_UNBLOCKED                                          = c_enum(None, 1, "", "")
KALIMBA_READ_CACHE__MUTEX_AVAILABLE                                              = c_enum(None, 0, "", "")
KALIMBA_READ_CACHE__MUTEX_CLAIMED_BY_P0                                          = c_enum(None, 1, "", "")
KALIMBA_READ_CACHE__MUTEX_CLAIMED_BY_P1                                          = c_enum(None, 2, "", "")
KALIMBA_READ_CACHE__MUTEX_CLAIMED_BY_P2                                          = c_enum(None, 4, "", "")
KALIMBA_READ_CACHE__MUTEX_CLAIMED_BY_P3                                          = c_enum(None, 8, "", "")
KALIMBA_READ_CACHE__MUTEX_DISABLED                                               = c_enum(None, 15, "", "")
















































READ_DECRYPT_CLEARTEXT_BASE                                                      = c_reg(0xffff9504, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
READ_DECRYPT_CLEARTEXT_BASE.READ_DECRYPT_CLEARTEXT_BASE                          = c_bits(READ_DECRYPT_CLEARTEXT_BASE, 0, 31, 0xffffffff, 32, "", "")
READ_DECRYPT_CLEARTEXT_SIZE                                                      = c_reg(0xffff9508, 1, 1, 0, "", 32, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
READ_DECRYPT_CLEARTEXT_SIZE.READ_DECRYPT_CLEARTEXT_SIZE                          = c_bits(READ_DECRYPT_CLEARTEXT_SIZE, 0, 31, 0xffffffff, 32, "", "")
READ_DECRYPT_CONTROL                                                             = c_reg(0xffff9500, 1, 1, 0, "", 10, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
READ_DECRYPT_CONTROL.ENABLE                                                      = c_bits(READ_DECRYPT_CONTROL, 0, 0, 0x1, 1, "", "")
READ_DECRYPT_CONTROL.PERF_ENABLE                                                 = c_bits(READ_DECRYPT_CONTROL, 1, 1, 0x2, 1, "", "")
READ_DECRYPT_CONTROL.PERF_INDEX                                                  = c_bits(READ_DECRYPT_CONTROL, 2, 4, 0x1c, 3, "", "")
READ_DECRYPT_CONTROL.DEBUG_SEL                                                   = c_bits(READ_DECRYPT_CONTROL, 5, 5, 0x20, 1, "", "")
READ_DECRYPT_CONTROL.LITTLE_ENDIAN_KEY                                           = c_bits(READ_DECRYPT_CONTROL, 6, 6, 0x40, 1, "", "")
READ_DECRYPT_CONTROL.LITTLE_ENDIAN_ADDRESS                                       = c_bits(READ_DECRYPT_CONTROL, 7, 7, 0x80, 1, "", "")
READ_DECRYPT_CONTROL.LITTLE_ENDIAN_HASH                                          = c_bits(READ_DECRYPT_CONTROL, 8, 8, 0x100, 1, "", "")
READ_DECRYPT_CONTROL.RESET                                                       = c_bits(READ_DECRYPT_CONTROL, 9, 9, 0x200, 1, "", "")






























USB2_ENDPOINT_SELECT                                                             = c_reg(0x60041240, 1, 1, 0, "", 6, 0, 0, 0, "", "", "", "", "", 0, 1, "", "", 0)
USB2_ENDPOINT_SELECT.USB2_ENDPOINT_SELECT_INDEX                                  = c_bits(USB2_ENDPOINT_SELECT, 0, 4, 0x1f, 5, "", "")
USB2_ENDPOINT_SELECT.USB2_ENDPOINT_SELECT_RX_NOT_TX                              = c_bits(USB2_ENDPOINT_SELECT, 5, 5, 0x20, 1, "", "")



VM_FREE_LIST_ADDR                                                                = c_reg(0xffff9a00, 1, 1, 0, "RW", 32, 0, 1, 0, "", "", "", "", "", 1, 1, "", "", 0)
VM_FREE_LIST_ADDR.VM_FREE_LIST_ADDR                                              = c_bits(VM_FREE_LIST_ADDR, 0, 31, 0xffffffff, 32, "RW", "")
MMU_FREE_LIST_ADDR                                                               = VM_FREE_LIST_ADDR
